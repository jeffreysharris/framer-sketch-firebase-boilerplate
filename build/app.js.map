{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/app.coffee","src/modules/findModule.coffee","src/modules/firebaseframer.coffee","src/modules/inputfield.coffee","src/modules/sketchSlicer.coffee","src/modules/words.coffee"],"names":[],"mappingstxteA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var FirebaseFramer, Input, bg, demoDB, lineHeight, messageLayers, post, s, slices, text, textStyles, textfield, username, words;\n\ns = require('sketchSlicer');\n\nFirebaseFramer = require('firebaseframer').FirebaseFramer;\n\nInput = require(\"inputfield\").Input;\n\nwords = require(\"words\");\n\ntextStyles = s.textStyles();\n\nslices = s.sketchSlicer();\n\ntext = s.sketchTextLayers();\n\nlineHeight = 30;\n\nFramer.Defaults.Animation = {\n  curve: 'spring(150, 10, 0)'\n};\n\ndemoDB = new FirebaseFramer({\n  projectID: \"framer-sketch-firebase-test\",\n  secret: \"lHwsK4ljhwUmMt3EU1ybrMPQcSDgbKhvTIwuqJ9I\",\n  server: \"s-usc1c-nss-134.firebaseio.com\"\n});\n\nbg = new BackgroundLayer({\n  backgroundColor: \"#fafafa\"\n});\n\nmessageLayers = [];\n\nusername = words.adjectives[Math.floor(Math.random() * words.adjectives.length)] + \" \" + words.nouns[Math.floor(Math.random() * words.nouns.length)];\n\nslices[\"button\"].onMouseDown(function() {\n  return slices[\"button\"].image = \"images/button-down.png\";\n});\n\ntextfield = new Input({\n  parent: slices[\"field\"],\n  setup: false,\n  type: \"text\",\n  width: slices[\"field\"].width,\n  height: slices[\"field\"].height\n});\n\ntextfield.style = {\n  fontSize: textStyles.chat_message.fontSize + \"px\",\n  color: textStyles.chat_message.color,\n  fontFamily: textStyles.chat_message.fontFamily,\n  padding: \"0px 0px 0px 20px\"\n};\n\ntext.clear_text.onClick(function() {\n  var j, layer, len, results;\n  demoDB[\"delete\"](\"/messages\");\n  results = [];\n  for (j = 0, len = messageLayers.length; j < len; j++) {\n    layer = messageLayers[j];\n    results.push(layer.destroy());\n  }\n  return results;\n});\n\npost = function() {\n  if (textfield.value.length) {\n    return demoDB.post('/messages', {\n      \"username\": username,\n      \"text\": textfield.value\n    });\n  }\n};\n\ndemoDB.onChange(\"/messages\", function(message) {\n  var child, i, j, k, len, lh, line, m, messageArray, ref, results;\n  messageArray = [];\n  for (m in message) {\n    if (message[m].username != null) {\n      messageArray = _.toArray(message);\n    } else {\n      messageArray = [message];\n    }\n  }\n  i = 0;\n  lh = text.chat_message.lineHeight * text.chat_message.fontSize;\n  for (j = messageArray.length - 1; j >= 0; j += -1) {\n    m = messageArray[j];\n    line = text.chat_message.copy();\n    line.text = m.username + \" : \" + m.text;\n    line.y = text.chat_message.y - lh * i;\n    line.parent = slices.chat_window;\n    line.visible = true;\n    i++;\n    messageLayers.push(line);\n  }\n  ref = slices[\"chat_window\"].children;\n  results = [];\n  for (k = 0, len = ref.length; k < len; k++) {\n    child = ref[k];\n    results.push(child.animate({\n      y: child.y - lh\n    }));\n  }\n  return results;\n});\n\nslices[\"button\"].onMouseUp(function() {\n  slices[\"button\"].image = \"images/button.png\";\n  post();\n  return textfield.value = \"\";\n});\n\ndocument.addEventListener('keypress', function(event) {\n  if (event.keyCode === 13) {\n    event.preventDefault();\n    post();\n    return textfield.value = \"\";\n  }\n});\n\ntext.chat_message.visible = false;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2plZmZyZXkuaGFycmlzL0RldmVsb3BtZW50L2ZyYW1lci1za2V0Y2gtZmlyZWJhc2UtYm9pbGVycGxhdGUvc3JjL2FwcC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvamVmZnJleS5oYXJyaXMvRGV2ZWxvcG1lbnQvZnJhbWVyLXNrZXRjaC1maXJlYmFzZS1ib2lsZXJwbGF0ZS9zcmMvYXBwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxJQUFBOztBQUFBLENBQUEsR0FBSSxPQUFBLENBQVEsY0FBUjs7QUFDSCxpQkFBa0IsT0FBQSxDQUFRLGdCQUFSOztBQUNsQixRQUFTLE9BQUEsQ0FBUSxZQUFSOztBQUNWLEtBQUEsR0FBUSxPQUFBLENBQVEsT0FBUjs7QUFFUixVQUFBLEdBQWEsQ0FBQyxDQUFDLFVBQUYsQ0FBQTs7QUFDYixNQUFBLEdBQVMsQ0FBQyxDQUFDLFlBQUYsQ0FBQTs7QUFDVCxJQUFBLEdBQU8sQ0FBQyxDQUFDLGdCQUFGLENBQUE7O0FBR1AsVUFBQSxHQUFhOztBQUViLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBaEIsR0FDRTtFQUFBLEtBQUEsRUFBTyxvQkFBUDs7O0FBRUYsTUFBQSxHQUFTLElBQUksY0FBSixDQUNSO0VBQUEsU0FBQSxFQUFXLDZCQUFYO0VBQ0EsTUFBQSxFQUFRLDBDQURSO0VBRUEsTUFBQSxFQUFRLGdDQUZSO0NBRFE7O0FBS1QsRUFBQSxHQUFLLElBQUksZUFBSixDQUNEO0VBQUEsZUFBQSxFQUFpQixTQUFqQjtDQURDOztBQUdMLGFBQUEsR0FBZ0I7O0FBR2hCLFFBQUEsR0FBVyxLQUFLLENBQUMsVUFBVyxDQUFBLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBSSxDQUFDLE1BQUwsQ0FBQSxDQUFBLEdBQWdCLEtBQUssQ0FBQyxVQUFVLENBQUMsTUFBNUMsQ0FBQSxDQUFqQixHQUF1RSxHQUF2RSxHQUE2RSxLQUFLLENBQUMsS0FBTSxDQUFBLElBQUksQ0FB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\n","var _findAll, _getHierarchy, _match;\n\n_getHierarchy = function(layer) {\n  var a, i, len, ref, string;\n  string = '';\n  ref = layer.ancestors();\n  for (i = 0, len = ref.length; i < len; i++) {\n    a = ref[i];\n    string = a.name + '>' + string;\n  }\n  return string = string + layer.name;\n};\n\n_match = function(hierarchy, string) {\n  var regExp, regexString;\n  string = string.replace(/\\s*>\\s*/g, '>');\n  string = string.split('*').join('[^>]*');\n  string = string.split(' ').join('(?:.*)>');\n  string = string.split(',').join('$|');\n  regexString = \"(^|>)\" + string + \"$\";\n  regExp = new RegExp(regexString);\n  return hierarchy.match(regExp);\n};\n\n_findAll = function(selector, fromLayer) {\n  var layers, stringNeedsRegex;\n  layers = Framer.CurrentContext._layers;\n  if (selector != null) {\n    stringNeedsRegex = _.find(['*', ' ', '>', ','], function(c) {\n      return _.includes(selector, c);\n    });\n    if (!(stringNeedsRegex || fromLayer)) {\n      return layers = _.filter(layers, function(layer) {\n        if (layer.name === selector) {\n          return true;\n        }\n      });\n    } else {\n      return layers = _.filter(layers, function(layer) {\n        var hierarchy;\n        hierarchy = _getHierarchy(layer);\n        if (fromLayer != null) {\n          return _match(hierarchy, fromLayer.name + ' ' + selector);\n        } else {\n          return _match(hierarchy, selector);\n        }\n      });\n    }\n  } else {\n    return layers;\n  }\n};\n\nexports.Find = function(selector, fromLayer) {\n  return _findAll(selector, fromLayer)[0];\n};\n\nexports.ƒ = function(selector, fromLayer) {\n  return _findAll(selector, fromLayer)[0];\n};\n\nexports.FindAll = function(selector, fromLayer) {\n  return _findAll(selector, fromLayer);\n};\n\nexports.ƒƒ = function(selector, fromLayer) {\n  return _findAll(selector, fromLayer);\n};\n\nLayer.prototype.find = function(selector, fromLayer) {\n  return _findAll(selector, this)[0];\n};\n\nLayer.prototype.ƒ = function(selector, fromLayer) {\n  return _findAll(selector, this)[0];\n};\n\nLayer.prototype.findAll = function(selector, fromLayer) {\n  return _findAll(selector, this);\n};\n\nLayer.prototype.ƒƒ = function(selector, fromLayer) {\n  return _findAll(selector, this);\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2plZmZyZXkuaGFycmlzL0RldmVsb3BtZW50L2ZyYW1lci1za2V0Y2gtZmlyZWJhc2UtYm9pbGVycGxhdGUvc3JjL21vZHVsZXMvZmluZE1vZHVsZS5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvamVmZnJleS5oYXJyaXMvRGV2ZWxvcG1lbnQvZnJhbWVyLXNrZXRjaC1maXJlYmFzZS1ib2lsZXJwbGF0ZS9zcmMvbW9kdWxlcy9maW5kTW9kdWxlLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBOztBQUFBLGFBQUEsR0FBZ0IsU0FBQyxLQUFEO0FBQ2QsTUFBQTtFQUFBLE1BQUEsR0FBUztBQUNUO0FBQUEsT0FBQSxxQ0FBQTs7SUFDRSxNQUFBLEdBQVMsQ0FBQyxDQUFDLElBQUYsR0FBTyxHQUFQLEdBQVc7QUFEdEI7QUFFQSxTQUFPLE1BQUEsR0FBUyxNQUFBLEdBQU8sS0FBSyxDQUFDO0FBSmY7O0FBTWhCLE1BQUEsR0FBUyxTQUFDLFNBQUQsRUFBWSxNQUFaO0FBRVAsTUFBQTtFQUFBLE1BQUEsR0FBUyxNQUFNLENBQUMsT0FBUCxDQUFlLFVBQWYsRUFBMEIsR0FBMUI7RUFDVCxNQUFBLEdBQVMsTUFBTSxDQUFDLEtBQVAsQ0FBYSxHQUFiLENBQWlCLENBQUMsSUFBbEIsQ0FBdUIsT0FBdkI7RUFDVCxNQUFBLEdBQVMsTUFBTSxDQUFDLEtBQVAsQ0FBYSxHQUFiLENBQWlCLENBQUMsSUFBbEIsQ0FBdUIsU0FBdkI7RUFDVCxNQUFBLEdBQVMsTUFBTSxDQUFDLEtBQVAsQ0FBYSxHQUFiLENBQWlCLENBQUMsSUFBbEIsQ0FBdUIsSUFBdkI7RUFDVCxXQUFBLEdBQWMsT0FBQSxHQUFRLE1BQVIsR0FBZTtFQUU3QixNQUFBLEdBQVMsSUFBSSxNQUFKLENBQVcsV0FBWDtBQUNULFNBQU8sU0FBUyxDQUFDLEtBQVYsQ0FBZ0IsTUFBaEI7QUFUQTs7QUFXVCxRQUFBLEdBQVcsU0FBQyxRQUFELEVBQVcsU0FBWDtBQUNULE1BQUE7RUFBQSxNQUFBLEdBQVMsTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUUvQixJQUFHLGdCQUFIO0lBQ0UsZ0JBQUEsR0FBbUIsQ0FBQyxDQUFDLElBQUYsQ0FBTyxDQUFDLEdBQUQsRUFBSyxHQUFMLEVBQVMsR0FBVCxFQUFhLEdBQWIsQ0FBUCxFQUEwQixTQUFDLENBQUQ7YUFBTyxDQUFDLENBQUMsUUFBRixDQUFXLFFBQVgsRUFBb0IsQ0FBcEI7SUFBUCxDQUExQjtJQUNuQixJQUFBLENBQUEsQ0FBTyxnQkFBQSxJQUFvQixTQUEzQixDQUFBO2FBQ0UsTUFBQSxHQUFTLENBQUMsQ0FBQyxNQUFGLENBQVMsTUFBVCxFQUFpQixTQUFDLEtBQUQ7UUFDeEIsSUFBRyxLQUFLLENBQUMsSUFBTixLQUFjLFFBQWpCO2lCQUErQixLQUEvQjs7TUFEd0IsQ0FBakIsRUFEWDtLQUFBLE1BQUE7YUFJRSxNQUFBLEdBQVMsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxNQUFULEVBQWlCLFNBQUMsS0FBRDtBQUN0QixZQUFBO1FBQUEsU0FBQSxHQUFZLGFBQUEsQ0FBYyxLQUFkO1FBQ1osSUFBRyxpQkFBSDtpQkFDRSxNQUFBLENBQU8sU0FBUCxFQUFrQixTQUFTLENBQUMsSUFBVixHQUFlLEdBQWYsR0FBbUIsUUFBckMsRUFERjtTQUFBLE1BQUE7aUJBR0UsTUFBQSxDQUFPLFNBQVAsRUFBa0IsUUFBbEIsRUFIRjs7TUFGc0IsQ0FBakIsRUFKWDtLQUZGO0dBQUEsTUFBQTtXQWFFLE9BYkY7O0FBSFM7O0FBb0JYLE9BQU8sQ0FBQyxJQUFSLEdBQWtCLFNBQUMsUUFBRCxFQUFXLFNBQVg7U0FBeUIsUUFBQSxDQUFTLFFBQVQsRUFBbUIsU0FBbkIsQ0FBOEIsQ0FBQSxDQUFBO0FBQXZEOztBQUNsQixPQUFPLENBQUMsQ0FBUixHQUFrQixTQUFDLFFBQUQsRUFBVyxTQUFYO1NBQXlCLFFBQUEsQ0FBUyxRQUFULEVBQW1CLFNBQW5CLENBQThCLENBQUEsQ0FBQTtBQUF2RDs7QUFFbEIsT0FBTyxDQUFDLE9BQVIsR0FBa0IsU0FBQyxRQUFELEVBQVcsU0FBWDtTQUF5QixRQUFBLENBQVMsUUFBVCxFQUFtQixTQUFuQjtBQUF6Qjs7QUFDbEIsT0FBTyxDQUFDLEVBQVIsR0FBa0IsU0FBQyxRQUFELEVBQVcsU0FBWDtTQUF5QixRQUFBLENBQVMsUUFBVCxFQUFtQixTQUFuQjtBQUF6Qjs7QUFHbEIsS0FBSyxDQUFBLFNBQUUsQ0FBQSxJQUFQLEdBQWtCLFNBQUMsUUFBRCxFQUFXLFNBQVg7U0FBeUIsUUFBQSxDQUFTLFFBQVQsRUFBbUIsSUFBbkIsQ0FBc0IsQ0FBQSxDQUFBO0FBQS9DOztBQUNsQixLQUFLLENBQUEsU0FBRSxDQUFBLENBQVAsR0FBa0IsU0FBQyxRQUFELEVBQVcsU0FBWDtTQUF5QixRQUFBLENBQVMsUUFBVCxFQUFtQixJQUFuQixDQUFzQixDQUFBLENBQUE7QUFBL0M7O0FBRWxCLEtBQUssQ0FBQSxTQUFFLENBQUEsT0FBUCxHQUFrQixTQUFDLFFBQUQsRUFBVyxTQUFYO1NBQXlCLFFBQUEsQ0FBUyxRQUFULEVBQW1CLElBQW5CO0FBQXpCOztBQUNsQixLQUFLLENBQUEsU0FBRSxDQUFBLEVBQVAsR0FBa0IsU0FBQyxRQUFELEVBQVcsU0FBWDtTQUF5QixRQUFBLENBQVMsUUFBVCxFQUFtQixJQUFuQjtBQUF6QiJ9\n","var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nexports.FirebaseFramer = (function(superClass) {\n  var getCORSurl, request;\n\n  extend(FirebaseFramer, superClass);\n\n  getCORSurl = function(server, path, secret, project) {\n    var url;\n    switch (Utils.isWebKit()) {\n      case true:\n        url = \"https://\" + server + path + \".json?auth=\" + secret + \"&ns=\" + project + \"&sse=true\";\n        break;\n      default:\n        url = \"https://\" + project + \".firebaseio.com\" + path + \".json?auth=\" + secret;\n    }\n    return url;\n  };\n\n  FirebaseFramer.define(\"status\", {\n    get: function() {\n      return this._status;\n    }\n  });\n\n  function FirebaseFramer(options) {\n    var base, base1, base2, base3;\n    this.options = options != null ? options : {};\n    this.projectID = (base = this.options).projectID != null ? base.projectID : base.projectID = null;\n    this.secret = (base1 = this.options).secret != null ? base1.secret : base1.secret = null;\n    this.server = (base2 = this.options).server != null ? base2.server : base2.server = void 0;\n    this.debug = (base3 = this.options).debug != null ? base3.debug : base3.debug = false;\n    if (this._status == null) {\n      this._status = \"disconnected\";\n    }\n    FirebaseFramer.__super__.constructor.apply(this, arguments);\n    if (this.server === void 0) {\n      Utils.domLoadJSON(\"https://\" + this.projectID + \".firebaseio.com/.settings/owner.json\", function(a, server) {\n        var msg;\n        print(msg = \"Add ______ server:\" + '   \"' + server + '\"' + \" _____ to your instance of Firebase.\");\n        if (this.debug) {\n          return console.log(\"Firebase: \" + msg);\n        }\n      });\n    }\n    if (this.debug) {\n      console.log(\"Firebase: Connecting to Firebase Project '\" + this.projectID + \"' ... \\n URL: '\" + (getCORSurl(this.server, \"/\", this.secret, this.projectID)) + \"'\");\n    }\n    this.onChange(\"connection\");\n  }\n\n  request = function(project, secret, path, callback, method, data, parameters, debug) {\n    var url, xhttp;\n    url = \"https://\" + project + \".firebaseio.com\" + path + \".json?auth=\" + secret;\n    if (parameters !== void 0) {\n      if (parameters.shallow) {\n        url += \"&shallow=true\";\n      }\n      if (parameters.format === \"export\") {\n        url += \"&format=export\";\n      }\n      switch (parameters.print) {\n        case \"pretty\":\n          url += \"&print=pretty\";\n          break;\n        case \"silent\":\n          url += \"&print=silent\";\n      }\n      if (typeof parameters.download === \"string\") {\n        url += \"&download=\" + parameters.download;\n        window.open(url, \"_self\");\n      }\n      if (typeof parameters.orderBy === \"string\") {\n        url += \"&orderBy=\" + '\"' + parameters.orderBy + '\"';\n      }\n      if (typeof parameters.limitToFirst === \"number\") {\n        url += \"&limitToFirst=\" + parameters.limitToFirst;\n      }\n      if (typeof parameters.limitToLast === \"number\") {\n        url += \"&limitToLast=\" + parameters.limitToLast;\n      }\n      if (typeof parameters.startAt === \"number\") {\n        url += \"&startAt=\" + parameters.startAt;\n      }\n      if (typeof parameters.endAt === \"number\") {\n        url += \"&endAt=\" + parameters.endAt;\n      }\n      if (typeof parameters.equalTo === \"number\") {\n        url += \"&equalTo=\" + parameters.equalTo;\n      }\n    }\n    xhttp = new XMLHttpRequest;\n    if (debug) {\n      console.log(\"Firebase: New '\" + method + \"'-request with data: '\" + (JSON.stringify(data)) + \"' \\n URL: '\" + url + \"'\");\n    }\n    xhttp.onreadystatechange = (function(_this) {\n      return function() {\n        if (parameters !== void 0) {\n          if (parameters.print === \"silent\" || typeof parameters.download === \"string\") {\n            return;\n          }\n        }\n        switch (xhttp.readyState) {\n          case 0:\n            if (debug) {\n              console.log(\"Firebase: Request not initialized \\n URL: '\" + url + \"'\");\n            }\n            break;\n          case 1:\n            if (debug) {\n              console.log(\"Firebase: Server connection established \\n URL: '\" + url + \"'\");\n            }\n            break;\n          case 2:\n            if (debug) {\n              console.log(\"Firebase: Request received \\n URL: '\" + url + \"'\");\n            }\n            break;\n          case 3:\n            if (debug) {\n              console.log(\"Firebase: Processing request \\n URL: '\" + url + \"'\");\n            }\n            break;\n          case 4:\n            if (callback != null) {\n              callback(JSON.parse(xhttp.responseText));\n            }\n            if (debug) {\n              console.log(\"Firebase: Request finished, response: '\" + (JSON.parse(xhttp.responseText)) + \"' \\n URL: '\" + url + \"'\");\n            }\n        }\n        if (xhttp.status === \"404\") {\n          if (debug) {\n            return console.warn(\"Firebase: Invalid request, page not found \\n URL: '\" + url + \"'\");\n          }\n        }\n      };\n    })(this);\n    xhttp.open(method, url, true);\n    xhttp.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n    return xhttp.send(data = \"\" + (JSON.stringify(data)));\n  };\n\n  FirebaseFramer.prototype.get = function(path, callback, parameters) {\n    return request(this.projectID, this.secret, path, callback, \"GET\", null, parameters, this.debug);\n  };\n\n  FirebaseFramer.prototype.put = function(path, data, callback, parameters) {\n    return request(this.projectID, this.secret, path, callback, \"PUT\", data, parameters, this.debug);\n  };\n\n  FirebaseFramer.prototype.post = function(path, data, callback, parameters) {\n    return request(this.projectID, this.secret, path, callback, \"POST\", data, parameters, this.debug);\n  };\n\n  FirebaseFramer.prototype.patch = function(path, data, callback, parameters) {\n    return request(this.projectID, this.secret, path, callback, \"PATCH\", data, parameters, this.debug);\n  };\n\n  FirebaseFramer.prototype[\"delete\"] = function(path, callback, parameters) {\n    return request(this.projectID, this.secret, path, callback, \"DELETE\", null, parameters, this.debug);\n  };\n\n  FirebaseFramer.prototype.onChange = function(path, callback) {\n    var currentStatus, source, url;\n    if (path === \"connection\") {\n      url = getCORSurl(this.server, \"/\", this.secret, this.projectID);\n      currentStatus = \"disconnected\";\n      source = new EventSource(url);\n      source.addEventListener(\"open\", (function(_this) {\n        return function() {\n          if (currentStatus === \"disconnected\") {\n            _this._status = \"connected\";\n            if (callback != null) {\n              callback(\"connected\");\n            }\n            if (_this.debug) {\n              console.log(\"Firebase: Connection to Firebase Project '\" + _this.projectID + \"' established\");\n            }\n          }\n          return currentStatus = \"connected\";\n        };\n      })(this));\n      return source.addEventListener(\"error\", (function(_this) {\n        return function() {\n          if (currentStatus === \"connected\") {\n            _this._status = \"disconnected\";\n            if (callback != null) {\n              callback(\"disconnected\");\n            }\n            if (_this.debug) {\n              console.warn(\"Firebase: Connection to Firebase Project '\" + _this.projectID + \"' closed\");\n            }\n          }\n          return currentStatus = \"disconnected\";\n        };\n      })(this));\n    } else {\n      url = getCORSurl(this.server, path, this.secret, this.projectID);\n      source = new EventSource(url);\n      if (this.debug) {\n        console.log(\"Firebase: Listening to changes made to '\" + path + \"' \\n URL: '\" + url + \"'\");\n      }\n      source.addEventListener(\"put\", (function(_this) {\n        return function(ev) {\n          if (callback != null) {\n            callback(JSON.parse(ev.data).data, \"put\", JSON.parse(ev.data).patch);\n          }\n          if (_this.debug) {\n            return console.log(\"Firebase: Received changes made to '\" + path + \"' via 'PUT': \" + (JSON.parse(ev.data).data) + \" \\n URL: '\" + url + \"'\");\n          }\n        };\n      })(this));\n      return source.addEventListener(\"patch\", (function(_this) {\n        return function(ev) {\n          if (callback != null) {\n            callback(JSON.parse(ev.data).data, \"patch\", JSON.parse(ev.data).patch);\n          }\n          if (_this.debug) {\n            return console.log(\"Firebase: Received changes made to '\" + path + \"' via 'PATCH': \" + (JSON.parse(ev.data).data) + \" \\n URL: '\" + url + \"'\");\n          }\n        };\n      })(this));\n    }\n  };\n\n  return FirebaseFramer;\n\n})(Framer.BaseClass);\n\n//# sourceMappingURL=data:application/json;base64,\n","var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nexports.Input = (function(superClass) {\n  extend(Input, superClass);\n\n  Input.define(\"style\", {\n    get: function() {\n      return this.input.style;\n    },\n    set: function(value) {\n      return _.extend(this.input.style, value);\n    }\n  });\n\n  Input.define(\"value\", {\n    get: function() {\n      return this.input.value;\n    },\n    set: function(value) {\n      return this.input.value = value;\n    }\n  });\n\n  function Input(options) {\n    if (options == null) {\n      options = {};\n    }\n    if (options.setup == null) {\n      options.setup = false;\n    }\n    if (options.width == null) {\n      options.width = Screen.width;\n    }\n    if (options.clip == null) {\n      options.clip = false;\n    }\n    if (options.height == null) {\n      options.height = 60;\n    }\n    if (options.backgroundColor == null) {\n      options.backgroundColor = options.setup ? \"rgba(255, 60, 47, .5)\" : \"transparent\";\n    }\n    if (options.fontSize == null) {\n      options.fontSize = 30;\n    }\n    if (options.lineHeight == null) {\n      options.lineHeight = 30;\n    }\n    if (options.padding == null) {\n      options.padding = 10;\n    }\n    if (options.fontFamily == null) {\n      options.fontFamily = \"\";\n    }\n    if (options.opacity == null) {\n      options.opacity = 1;\n    }\n    if (options.text == null) {\n      options.text = \"\";\n    }\n    if (options.placeholder == null) {\n      options.placeholder = \"\";\n    }\n    if (options.type == null) {\n      options.type = \"text\";\n    }\n    Input.__super__.constructor.call(this, options);\n    if (options.placeholderColor != null) {\n      this.placeholderColor = options.placeholderColor;\n    }\n    this.input = document.createElement(\"input\");\n    this.input.id = \"input-\" + (_.now());\n    this.input.style.cssText = \"font-size: \" + options.fontSize + \"px; line-height: \" + options.lineHeight + \"px; padding: \" + options.padding + \"px; width: \" + options.width + \"px; height: \" + options.height + \"px; border: none; outline-width: 0; background-image: url(about:blank); background-color: \" + options.backgroundColor + \"; font-family: \" + options.fontFamily + \"; opacity: \" + options.opacity + \";\";\n    this.input.value = options.text;\n    this.input.type = options.type;\n    this.input.placeholder = options.placeholder;\n    this.form = document.createElement(\"form\");\n    this.form.appendChild(this.input);\n    this._element.appendChild(this.form);\n    this.backgroundColor = \"transparent\";\n    if (this.placeholderColor) {\n      this.updatePlaceholderColor(options.placeholderColor);\n    }\n  }\n\n  Input.prototype.updatePlaceholderColor = function(color) {\n    var css;\n    this.placeholderColor = color;\n    if (this.pageStyle != null) {\n      document.head.removeChild(this.pageStyle);\n    }\n    this.pageStyle = document.createElement(\"style\");\n    this.pageStyle.type = \"text/css\";\n    css = \"#\" + this.input.id + \"::-webkit-input-placeholder { color: \" + this.placeholderColor + \"; }\";\n    this.pageStyle.appendChild(document.createTextNode(css));\n    return document.head.appendChild(this.pageStyle);\n  };\n\n  Input.prototype.focus = function() {\n    return this.input.focus();\n  };\n\n  return Input;\n\n})(Layer);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2plZmZyZXkuaGFycmlzL0RldmVsb3BtZW50L2ZyYW1lci1za2V0Y2gtZmlyZWJhc2UtYm9pbGVycGxhdGUvc3JjL21vZHVsZXMvaW5wdXRmaWVsZC5jb2ZmZWUiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIvVXNlcnMvamVmZnJleS5oYXJyaXMvRGV2ZWxvcG1lbnQvZnJhbWVyLXNrZXRjaC1maXJlYmFzZS1ib2lsZXJwbGF0ZS9zcmMvbW9kdWxlcy9pbnB1dGZpZWxkLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxJQUFBOzs7QUFBTSxPQUFPLENBQUM7OztFQUNiLEtBQUMsQ0FBQSxNQUFELENBQVEsT0FBUixFQUNDO0lBQUEsR0FBQSxFQUFLLFNBQUE7YUFBRyxJQUFDLENBQUEsS0FBSyxDQUFDO0lBQVYsQ0FBTDtJQUNBLEdBQUEsRUFBSyxTQUFDLEtBQUQ7YUFDSixDQUFDLENBQUMsTUFBRixDQUFTLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBaEIsRUFBdUIsS0FBdkI7SUFESSxDQURMO0dBREQ7O0VBS0EsS0FBQyxDQUFBLE1BQUQsQ0FBUSxPQUFSLEVBQ0M7SUFBQSxHQUFBLEVBQUssU0FBQTthQUFHLElBQUMsQ0FBQSxLQUFLLENBQUM7SUFBVixDQUFMO0lBQ0EsR0FBQSxFQUFLLFNBQUMsS0FBRDthQUNKLElBQUMsQ0FBQSxLQUFLLENBQUMsS0FBUCxHQUFlO0lBRFgsQ0FETDtHQUREOztFQUthLGVBQUMsT0FBRDs7TUFBQyxVQUFVOzs7TUFDdkIsT0FBTyxDQUFDLFFBQVM7OztNQUNqQixPQUFPLENBQUMsUUFBUyxNQUFNLENBQUM7OztNQUN4QixPQUFPLENBQUMsT0FBUTs7O01BQ2hCLE9BQU8sQ0FBQyxTQUFVOzs7TUFDbEIsT0FBTyxDQUFDLGtCQUFzQixPQUFPLENBQUMsS0FBWCxHQUFzQix1QkFBdEIsR0FBbUQ7OztNQUM5RSxPQUFPLENBQUMsV0FBWTs7O01BQ3BCLE9BQU8sQ0FBQyxhQUFjOzs7TUFD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\n","var SketchTextLayer, Slice, TextStyle, _assets, _layers, _slices, assignConstraints, assignFlexbox, findObjects, getConstraints, getObject, getParents, getTextStyles, groups, makeLayerFromParent, ref, slices, text_styles, ƒ, ƒƒ,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nref = require('findModule'), ƒ = ref.ƒ, ƒƒ = ref.ƒƒ;\n\n_slices = Utils.domLoadJSONSync(\"slices.json\");\n\n_assets = Utils.domLoadJSONSync(\"assets.json\");\n\n_layers = Utils.domLoadJSONSync(\"layers.json\");\n\nslices = {};\n\ngroups = {};\n\ntext_styles = {};\n\nSlice = (function(superClass) {\n  extend(Slice, superClass);\n\n  function Slice(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).sketch_id == null) {\n      base.sketch_id = \"111\";\n    }\n    this.options.constraints = {};\n    this.options.flexprops = {};\n    Slice.__super__.constructor.call(this, this.options);\n    this.sketch_id = this.options.sketch_id;\n    this.constraints = this.options.constraints;\n    this.flexprops = this.options.flexprops;\n  }\n\n  return Slice;\n\n})(Layer);\n\nSketchTextLayer = (function(superClass) {\n  extend(SketchTextLayer, superClass);\n\n  function SketchTextLayer(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).sketch_id == null) {\n      base.sketch_id = \"111\";\n    }\n    this.options.constraints = {};\n    this.options.flexprops = {};\n    SketchTextLayer.__super__.constructor.call(this, this.options);\n    this.sketch_id = this.options.sketch_id;\n    this.constraints = this.options.constraints;\n    this.flexprops = this.options.flexprops;\n  }\n\n  return SketchTextLayer;\n\n})(TextLayer);\n\nTextStyle = (function() {\n  function TextStyle(options) {\n    this.options = options != null ? options : {};\n    this.name;\n    this.id;\n    this.color;\n    this.fontSize;\n    this.fontFamily;\n    this.fontWeight;\n    this.fontStyle;\n    this.lineHeight;\n    this.letterSpacing;\n    this.textAlign;\n    this.textTransform;\n    this.textDecoration;\n    this.name = this.options.name;\n    this.id = this.options.id;\n    this.color = this.options.color;\n    this.fontSize = this.options.fontSize;\n    this.fontFamily = this.options.fontFamily;\n    this.fontWeight = this.options.fontWeight;\n    this.fontStyle = this.options.fontStyle;\n    this.lineHeight = this.options.lineHeight;\n    this.letterSpacing = this.options.letterSpacing;\n    this.textAlign = this.options.textAlign;\n    this.textTransform = this.options.textTransform;\n    this.textDecoration = this.options.textDecoration;\n  }\n\n  return TextStyle;\n\n})();\n\ngetTextStyles = function() {\n  var align, colorConverter, decoration, j, layerTextStyles, len, ref1, style, transform;\n  colorConverter = (function(_this) {\n    return function(val) {\n      var convert, j, len, new_val, split, v;\n      convert = function(x) {\n        x *= 255;\n        return x;\n      };\n      split = val.split(\"rgba(\").join(\"\").split(\")\").join(\"\").split(\",\");\n      new_val = [];\n      for (j = 0, len = split.length; j < len; j++) {\n        v = split[j];\n        new_val.push(convert(v));\n      }\n      new_val.join(\",\");\n      return \"rgba(\" + new_val + \")\";\n    };\n  })(this);\n  align = (function(_this) {\n    return function(n) {\n      var alignment;\n      alignment = null;\n      switch (n) {\n        case 0:\n          alignment = \"left\";\n          break;\n        case 1:\n          alignment = \"right\";\n          break;\n        case 2:\n          alignment = \"center\";\n          break;\n        case 3:\n          alignment = \"justified\";\n          break;\n        default:\n          break;\n      }\n      return alignment;\n    };\n  })(this);\n  transform = (function(_this) {\n    return function(n) {\n      var x;\n      x = null;\n      switch (n) {\n        case 0:\n          break;\n        case 1:\n          x = \"uppercase\";\n          break;\n        case 2:\n          x = \"lowercase\";\n          break;\n        default:\n          break;\n      }\n      return x;\n    };\n  })(this);\n  decoration = (function(_this) {\n    return function(m, n) {\n      var x;\n      x = null;\n      if (m) {\n        x = \"line-through\";\n      }\n      if (n) {\n        x = \"underline\";\n      }\n      return x;\n    };\n  })(this);\n  layerTextStyles = (ref1 = _assets.layerTextStyles) != null ? ref1.objects : void 0;\n  if (layerTextStyles != null) {\n    for (j = 0, len = layerTextStyles.length; j < len; j++) {\n      style = layerTextStyles[j];\n      text_styles[style.name] = new TextStyle({\n        name: style.name,\n        id: style.objectID,\n        color: colorConverter(style.value.textStyle.NSColor.color),\n        fontSize: style.value.textStyle.NSFont.attributes.NSFontSizeAttribute,\n        fontFamily: style.value.textStyle.NSFont.family,\n        fontStyle: style.value.textStyle.NSFont.name.split(\" \")[style.value.textStyle.NSFont.name.split(\" \").length - 1].toLowerCase(),\n        lineHeight: style.value.textStyle.NSParagraphStyle.style.minimumLineHeight / style.value.textStyle.NSFont.attributes.NSFontSizeAttribute,\n        letterSpacing: style.value.textStyle.NSKern,\n        textAlign: align(style.value.textStyle.NSParagraphStyle.style.alignment),\n        textTransform: transform(style.value.textStyle.MSAttributedStringTextTransformAttribute),\n        textDecoration: decoration(style.value.textStyle.NSStrikethrough, style.value.textStyle.NSUnderline)\n      });\n    }\n  }\n  return text_styles;\n};\n\nmakeLayerFromParent = function(item) {\n  var layer, matches, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;\n  layer = null;\n  if (item.name != null) {\n    matches = ƒƒ(item.name);\n  } else {\n    return layer;\n  }\n  switch (matches.length) {\n    case 0:\n      slices[item.name] = new Slice({\n        name: item.name,\n        x: (ref1 = (ref2 = item.relative) != null ? ref2.x : void 0) != null ? ref1 : 0,\n        y: (ref3 = (ref4 = item.relative) != null ? ref4.y : void 0) != null ? ref3 : 0,\n        width: (ref5 = (ref6 = item.relative) != null ? ref6.width : void 0) != null ? ref5 : Canvas.width,\n        height: (ref7 = (ref8 = item.relative) != null ? ref8.height : void 0) != null ? ref7 : Canvas.height,\n        sketch_id: item.id,\n        backgroundColor: \"transparent\"\n      });\n      layer = slices[item.name];\n      break;\n    case 1:\n      layer = matches[0];\n  }\n  return layer;\n};\n\ngetObject = function(object, key, value) {\n  var i, prop, result;\n  if (object instanceof Array) {\n    i = 0;\n    while (i < object.length) {\n      result = getObject(object[i], key, value);\n      if (result) {\n        break;\n      }\n      i++;\n    }\n  } else {\n    for (prop in object) {\n      if (prop === key) {\n        if (!value) {\n          return object;\n        }\n        if (object[prop] === value) {\n          return object;\n        }\n      }\n      if (object[prop] instanceof Object || object[prop] instanceof Array) {\n        result = getObject(object[prop], key, value);\n        if (result) {\n          break;\n        }\n      }\n    }\n  }\n  return result;\n};\n\nfindObjects = function(object, key, value, finalResults) {\n  var getAllMatches;\n  finalResults = {};\n  getAllMatches = function(theObject) {\n    var i, prop, result;\n    result = null;\n    if (theObject instanceof Array) {\n      i = 0;\n      while (i < theObject.length) {\n        getAllMatches(theObject[i]);\n        i++;\n      }\n    } else {\n      for (prop in theObject) {\n        if (theObject.hasOwnProperty(prop)) {\n          if (prop === key) {\n            if (theObject[prop] === value) {\n              finalResults[theObject.name] = theObject;\n            }\n          }\n          if (theObject[prop] instanceof Object || theObject[prop] instanceof Array) {\n            getAllMatches(theObject[prop]);\n          }\n        }\n      }\n    }\n  };\n  getAllMatches(object);\n  return finalResults;\n};\n\ngetParents = function(object, list) {\n  var layer, layers, parent, parent_slice_list, prop, results, slice;\n  results = [];\n  for (prop in object) {\n    if (object[prop].hasOwnProperty(\"layers\")) {\n      layers = object[prop].layers;\n      results.push((function() {\n        var j, len, obj, results1;\n        results1 = [];\n        for (j = 0, len = layers.length; j < len; j++) {\n          layer = layers[j];\n          for (slice in list) {\n            if (layer.id === list[slice].sketch_id) {\n              parent = makeLayerFromParent(object[prop]);\n              if (parent != null) {\n                list[slice].parent = parent;\n                parent_slice_list = (\n                  obj = {},\n                  obj[\"\" + parent.name] = slices[parent.name],\n                  obj\n                );\n                getParents(_layers, parent_slice_list);\n              }\n            }\n          }\n          results1.push(getParents(layers, list));\n        }\n        return results1;\n      })());\n    } else {\n      results.push(getParents(object[prop], list));\n    }\n  }\n  return results;\n};\n\ngetConstraints = function(s) {\n  var anima, asset, constraints, flexprops, ref1, ref2;\n  asset = getObject(_assets, \"objectID\", s.sketch_id);\n  anima = asset != null ? (ref1 = asset.userInfo) != null ? ref1[\"com.animaapp.stc-sketch-plugin\"] : void 0 : void 0;\n  constraints = anima != null ? (ref2 = anima.kModelPropertiesKey) != null ? ref2.constraints : void 0 : void 0;\n  if (constraints != null) {\n    s.constraints = constraints;\n    assignConstraints(s);\n  }\n  if ((anima != null ? anima.kViewTypeKey : void 0) != null) {\n    flexprops = anima != null ? anima.kModelPropertiesKey : void 0;\n    s.flexprops = flexprops;\n    return assignFlexbox(s);\n  }\n};\n\nassignConstraints = function(s) {\n  var c, constant_bottom, constant_height, constant_horz, constant_left, constant_right, constant_top, constant_vert, constant_width, container, multiplier_bottom, multiplier_height, multiplier_left, multiplier_right, multiplier_top, multiplier_width, results;\n  container = s.parent;\n  results = [];\n  for (c in s.constraints) {\n    switch (c) {\n      case \"top\":\n        multiplier_top = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_top = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.y = Align.top(container.height * multiplier_top + constant_top);\n        results.push(container.on(\"change:height\", function() {\n          return s.y = Align.top(container.height * multiplier_top + constant_top);\n        }));\n        break;\n      case \"bottom\":\n        multiplier_bottom = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_bottom = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.y = Align.bottom(container.height * multiplier_bottom - constant_bottom);\n        results.push(container.on(\"change:height\", function() {\n          return s.y = Align.bottom(container.height * multiplier_bottom - constant_bottom);\n        }));\n        break;\n      case \"left\":\n        multiplier_left = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_left = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.x = Align.left(container.width * multiplier_left + constant_left);\n        results.push(container.on(\"change:width\", function() {\n          return s.x = Align.left(container.width * multiplier_left + constant_left);\n        }));\n        break;\n      case \"right\":\n        multiplier_right = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_right = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.x = Align.right(container.width * multiplier_right - constant_right);\n        results.push(container.on(\"change:width\", function() {\n          return s.x = Align.right(container.width * multiplier_right - constant_right);\n        }));\n        break;\n      case \"width\":\n        multiplier_width = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_width = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.width = container.width * multiplier_width + constant_width;\n        results.push(container.on(\"change:width\", function() {\n          return s.width = container.width * multiplier_width + constant_width;\n        }));\n        break;\n      case \"height\":\n        multiplier_height = s.constraints[c].multiplier != null ? s.constraints[c].multiplier : 0;\n        constant_height = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.height = container.height * multiplier_height + constant_height;\n        results.push(container.on(\"change:height\", function() {\n          return s.height = container.height * multiplier_height + constant_height;\n        }));\n        break;\n      case \"centerHorizontally\":\n        constant_horz = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.x = Align.center(constant_horz);\n        results.push(container.on(\"change:width\", function() {\n          return s.x = Align.center(constant_horz);\n        }));\n        break;\n      case \"centerVertically\":\n        constant_vert = s.constraints[c].constant != null ? s.constraints[c].constant : 0;\n        s.y = Align.center(constant_vert);\n        results.push(container.on(\"change:height\", function() {\n          return s.y = Align.center(constant_vert);\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n  return results;\n};\n\nassignFlexbox = function(s) {};\n\nexports.textStyles = function() {\n  return getTextStyles();\n};\n\nexports.sketchSlicer = function() {\n  var child, j, k, len, len1, ref1, ref2, slice;\n  ref1 = _slices.pages[0].slices;\n  for (j = 0, len = ref1.length; j < len; j++) {\n    slice = ref1[j];\n    slices[slice.name] = new Slice({\n      name: slice.name,\n      image: \"images/\" + slice.name + \".png\",\n      sketch_id: slice.id,\n      x: slice.relative.x,\n      y: slice.relative.y,\n      width: slice.relative.width,\n      height: slice.relative.height\n    });\n  }\n  getParents(_layers, slices);\n  slices[\"canvas\"].size = Canvas.size;\n  slices[\"canvas\"].x = 0;\n  slices[\"canvas\"].y = 0;\n  Canvas.on(\"change:size\", function() {\n    return slices[\"canvas\"].size = Canvas.size;\n  });\n  ref2 = slices[\"canvas\"].children;\n  for (k = 0, len1 = ref2.length; k < len1; k++) {\n    child = ref2[k];\n    child.size = slices[\"canvas\"].size;\n    child.x = slices[\"canvas\"].x;\n    child.y = slices[\"canvas\"].y;\n    slices[\"canvas\"].on(\"change:size\", function() {\n      return child.size = slices[\"canvas\"].size;\n    });\n  }\n  for (slice in slices) {\n    getConstraints(slices[slice]);\n  }\n  return slices;\n};\n\nexports.sketchTextLayers = function() {\n  var my_style, t_rel, text, text_layers;\n  text_layers = findObjects(_assets, \"<class>\", \"MSTextLayer\");\n  getTextStyles();\n  for (text in text_layers) {\n    my_style = getObject(text_styles, \"id\", text_layers[text].style.sharedObjectID);\n    t_rel = getObject(_layers, \"id\", text_layers[text].objectID);\n    if (my_style != null) {\n      text_layers[text] = new SketchTextLayer({\n        name: text_layers[text].name,\n        sketch_id: text_layers[text].objectID,\n        x: t_rel.relative.x,\n        y: t_rel.relative.y,\n        width: t_rel.relative.width,\n        height: t_rel.relative.height,\n        textAlign: my_style.textAlign,\n        text: text_layers[text].attributedString.value.text,\n        color: my_style.color,\n        fontSize: my_style.fontSize,\n        fontFamily: my_style.fontFamily,\n        fontStyle: my_style.fontStyle,\n        lineHeight: my_style.lineHeight,\n        letterSpacing: my_style.letterSpacing,\n        textTransform: my_style.textTransform,\n        textDecoration: my_style.textDecoration\n      });\n    }\n  }\n  getParents(_layers, text_layers);\n  for (text in text_layers) {\n    getConstraints(text_layers[text]);\n  }\n  return text_layers;\n};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2plZmZyZXkuaGFycmlzL0RldmVsb3BtZW50L2ZyYW1lci1za2V0Y2gtZmlyZWJhc2UtYm9pbGVycGxhdGUvc3JjL21vZHVsZXMvc2tldGNoU2xpY2VyLmNvZmZlZSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZWZmcmV5LmhhcnJpcy9EZXZlbG9wbWVudC9mcmFtZXItc2tldGNoLWZpcmViYXNlLWJvaWxlcnBsYXRlL3NyYy9tb2R1bGVzL3NrZXRjaFNsaWNlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsSUFBQSwrTkFBQTtFQUFBOzs7QUFBQSxNQUFTLE9BQUEsQ0FBUSxZQUFSLENBQVQsRUFBQyxTQUFELEVBQUc7O0FBS0gsT0FBQSxHQUFVLEtBQUssQ0FBQyxlQUFOLENBQXNCLGFBQXRCOztBQUNWLE9BQUEsR0FBVSxLQUFLLENBQUMsZUFBTixDQUFzQixhQUF0Qjs7QUFDVixPQUFBLEdBQVUsS0FBSyxDQUFDLGVBQU4sQ0FBc0IsYUFBdEI7O0FBR1YsTUFBQSxHQUFTOztBQUVULE1BQUEsR0FBUzs7QUFFVCxXQUFBLEdBQWM7O0FBRVI7OztFQUNXLGVBQUMsT0FBRDtBQUNULFFBQUE7SUFEVSxJQUFDLENBQUEsNEJBQUQsVUFBUzs7VUFDWCxDQUFDLFlBQWE7O0lBQ3RCLElBQUMsQ0FBQSxPQUFPLENBQUMsV0FBVCxHQUF1QjtJQUV2QixJQUFDLENBQUEsT0FBTyxDQUFDLFNBQVQsR0FBcUI7SUFFckIsdUNBQU0sSUFBQyxDQUFBLE9BQVA7SUFDQSxJQUFDLENBQUEsU0FBRCxHQUFhLElBQUMsQ0FBQSxPQUFPLENBQUM7SUFDdEIsSUFBQyxDQUFBLFdBQUQsR0FBZSxJQUFDLENBQUEsT0FBTyxDQUFDO0lBQ3hCLElBQUMsQ0FBQSxTQUFELEdBQWEsSUFBQyxDQUFBLE9BQU8sQ0FBQztFQVRiOzs7O0dBREc7O0FBWWQ7OztFQUNXLHlCQUFDLE9BQUQ7QUFDVCxRQUFBO0lBRFUsSUFBQyxDQUFBLDRC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\n","exports.nouns = [\"aardvark\", \"abyssinian\", \"accelerator\", \"accordion\", \"account\", \"accountant\", \"acknowledgment\", \"acoustic\", \"acrylic\", \"act\", \"action\", \"active\", \"activity\", \"actor\", \"actress\", \"adapter\", \"addition\", \"address\", \"adjustment\", \"adult\", \"advantage\", \"advertisement\", \"advice\", \"afghanistan\", \"africa\", \"aftermath\", \"afternoon\", \"aftershave\", \"afterthought\", \"age\", \"agenda\", \"agreement\", \"air\", \"airbus\", \"airmail\", \"airplane\", \"airport\", \"airship\", \"alarm\", \"albatross\", \"alcohol\", \"algebra\", \"algeria\", \"alibi\", \"alley\", \"alligator\", \"alloy\", \"almanac\", \"alphabet\", \"alto\", \"aluminium\", \"aluminum\", \"ambulance\", \"america\", \"amount\", \"amusement\", \"anatomy\", \"anethesiologist\", \"anger\", \"angle\", \"angora\", \"animal\", \"anime\", \"ankle\", \"answer\", \"ant\", \"antarctica\", \"anteater\", \"antelope\", \"anthony\", \"anthropology\", \"apartment\", \"apology\", \"apparatus\", \"apparel\", \"appeal\", \"appendix\", \"apple\", \"appliance\", \"approval\", \"april\", \"aquarius\", \"arch\", \"archaeology\", \"archeology\", \"archer\", \"architecture\", \"area\", \"argentina\", \"argument\", \"aries\", \"arithmetic\", \"arm\", \"armadillo\", \"armchair\", \"armenian\", \"army\", \"arrow\", \"art\", \"ash\", \"ashtray\", \"asia\", \"asparagus\", \"asphalt\", \"asterisk\", \"astronomy\", \"athlete\", \"atm\", \"atom\", \"attack\", \"attempt\", \"attention\", \"attic\", \"attraction\", \"august\", \"aunt\", \"australia\", \"australian\", \"author\", \"authorisation\", \"authority\", \"authorization\", \"avenue\", \"babies\", \"baboon\", \"baby\", \"back\", \"backbone\", \"bacon\", \"badge\", \"badger\", \"bag\", \"bagel\", \"bagpipe\", \"bail\", \"bait\", \"baker\", \"bakery\", \"balance\", \"balinese\", \"ball\", \"balloon\", \"bamboo\", \"banana\", \"band\", \"bandana\", \"bangladesh\", \"bangle\", \"banjo\", \"bank\", \"bankbook\", \"banker\", \"bar\", \"barbara\", \"barber\", \"barge\", \"baritone\", \"barometer\", \"base\", \"baseball\", \"basement\", \"basin\", \"basket\", \"basketball\", \"bass\", \"bassoon\", \"bat\", \"bath\", \"bathroom\", \"bathtub\", \"battery\", \"battle\", \"bay\", \"beach\", \"bead\", \"beam\", \"bean\", \"bear\", \"beard\", \"beast\", \"beat\", \"beautician\", \"beauty\", \"beaver\", \"bed\", \"bedroom\", \"bee\", \"beech\", \"beef\", \"beer\", \"beet\", \"beetle\", \"beggar\", \"beginner\", \"begonia\", \"behavior\", \"belgian\", \"belief\", \"believe\", \"bell\", \"belt\", \"bench\", \"bengal\", \"beret\", \"berry\", \"bestseller\", \"betty\", \"bibliography\", \"bicycle\", \"bike\", \"bill\", \"billboard\", \"biology\", \"biplane\", \"birch\", \"bird\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"bladder\", \"blade\", \"blanket\", \"blinker\", \"blizzard\", \"block\", \"blood\", \"blouse\", \"blow\", \"blowgun\", \"blue\", \"board\", \"boat\", \"bobcat\", \"body\", \"bolt\", \"bomb\", \"bomber\", \"bone\", \"bongo\", \"bonsai\", \"book\", \"bookcase\", \"booklet\", \"boot\", \"border\", \"botany\", \"bottle\", \"bottom\", \"boundary\", \"bow\", \"bowl\", \"bowling\", \"box\", \"boy\", \"bra\", \"brace\", \"bracket\", \"brain\", \"brake\", \"branch\", \"brand\", \"brandy\", \"brass\", \"brazil\", \"bread\", \"break\", \"breakfast\", \"breath\", \"brian\", \"brick\", \"bridge\", \"british\", \"broccoli\", \"brochure\", \"broker\", \"bronze\", \"brother\", \"brother-in-law\", \"brow\", \"brown\", \"brush\", \"bubble\", \"bucket\", \"budget\", \"buffer\", \"buffet\", \"bugle\", \"building\", \"bulb\", \"bull\", \"bulldozer\", \"bumper\", \"bun\", \"burglar\", \"burma\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"butane\", \"butcher\", \"butter\", \"button\", \"buzzard\", \"cabbage\", \"cabinet\", \"cable\", \"cactus\", \"cafe\", \"cake\", \"calculator\", \"calculus\", \"calendar\", \"calf\", \"call\", \"camel\", \"camera\", \"camp\", \"can\", \"canada\", \"canadian\", \"cancer\", \"candle\", \"cannon\", \"canoe\", \"canvas\", \"cap\", \"capital\", \"cappelletti\", \"capricorn\", \"captain\", \"caption\", \"car\", \"caravan\", \"carbon\", \"card\", \"cardboard\", \"cardigan\", \"care\", \"carnation\", \"carol\", \"carp\", \"carpenter\", \"carriage\", \"carrot\", \"cart\", \"cartoon\", \"case\", \"cast\", \"castanet\", \"cat\", \"catamaran\", \"caterpillar\", \"cathedral\", \"catsup\", \"cattle\", \"cauliflower\", \"cause\", \"caution\", \"cave\", \"c-clamp\", \"cd\", \"ceiling\", \"celery\", \"celeste\", \"cell\", \"cellar\", \"cello\", \"celsius\", \"cement\", \"cemetery\", \"cent\", \"centimeter\", \"century\", \"ceramic\", \"cereal\", \"certification\", \"chain\", \"chair\", \"chalk\", \"chance\", \"change\", \"channel\", \"character\", \"chard\", \"charles\", \"chauffeur\", \"check\", \"cheek\", \"cheese\", \"cheetah\", \"chef\", \"chemistry\", \"cheque\", \"cherries\", \"cherry\", \"chess\", \"chest\", \"chick\", \"chicken\", \"chicory\", \"chief\", \"child\", \"children\", \"chill\", \"chime\", \"chimpanzee\", \"chin\", \"china\", \"chinese\", \"chive\", \"chocolate\", \"chord\", \"christmas\", \"christopher\", \"chronometer\", \"church\", \"cicada\", \"cinema\", \"circle\", \"circulation\", \"cirrus\", \"citizenship\", \"city\", \"clam\", \"clarinet\", \"class\", \"claus\", \"clave\", \"clef\", \"clerk\", \"click\", \"client\", \"climb\", \"clipper\", \"cloakroom\", \"clock\", \"close\", \"closet\", \"cloth\", \"cloud\", \"cloudy\", \"clover\", \"club\", \"clutch\", \"coach\", \"coal\", \"coast\", \"coat\", \"cobweb\", \"cockroach\", \"cocktail\", \"cocoa\", \"cod\", \"coffee\", \"coil\", \"coin\", \"coke\", \"cold\", \"collar\", \"college\", \"collision\", \"colombia\", \"colon\", \"colony\", \"color\", \"colt\", \"column\", \"columnist\", \"comb\", \"comfort\", \"comic\", \"comma\", \"command\", \"commission\", \"committee\", \"community\", \"company\", \"comparison\", \"competition\", \"competitor\", \"composer\", \"composition\", \"computer\", \"condition\", \"condor\", \"cone\", \"confirmation\", \"conga\", \"congo\", \"conifer\", \"connection\", \"consonant\", \"continent\", \"control\", \"cook\", \"cooking\", \"copper\", \"copy\", \"copyright\", \"cord\", \"cork\", \"cormorant\", \"corn\", \"cornet\", \"correspondent\", \"cost\", \"cotton\", \"couch\", \"cougar\", \"cough\", \"country\", \"course\", \"court\", \"cousin\", \"cover\", \"cow\", \"cowbell\", \"crab\", \"crack\", \"cracker\", \"craftsman\", \"crate\", \"crawdad\", \"crayfish\", \"crayon\", \"cream\", \"creator\", \"creature\", \"credit\", \"creditor\", \"creek\", \"crib\", \"cricket\", \"crime\", \"criminal\", \"crocodile\", \"crocus\", \"croissant\", \"crook\", \"crop\", \"cross\", \"crow\", \"crowd\", \"crown\", \"crush\", \"cry\", \"cub\", \"cuban\", \"cucumber\", \"cultivator\", \"cup\", \"cupboard\", \"cupcake\", \"curler\", \"currency\", \"current\", \"curtain\", \"curve\", \"cushion\", \"custard\", \"customer\", \"cut\", \"cuticle\", \"cycle\", \"cyclone\", \"cylinder\", \"cymbal\", \"dad\", \"daffodil\", \"dahlia\", \"daisy\", \"damage\", \"dance\", \"dancer\", \"danger\", \"daniel\", \"dash\", \"dashboard\", \"database\", \"date\", \"daughter\", \"david\", \"day\", \"dead\", \"deadline\", \"deal\", \"death\", \"deborah\", \"debt\", \"debtor\", \"decade\", \"december\", \"decimal\", \"decision\", \"decrease\", \"dedication\", \"deer\", \"defense\", \"deficit\", \"degree\", \"delete\", \"delivery\", \"den\", \"denim\", \"dentist\", \"deodorant\", \"department\", \"deposit\", \"description\", \"desert\", \"design\", \"desire\", \"desk\", \"dessert\", \"destruction\", \"detail\", \"detective\", \"development\", \"dew\", \"diamond\", \"diaphragm\", \"dibble\", \"dictionary\", \"dietician\", \"difference\", \"digestion\", \"digger\", \"digital\", \"dill\", \"dime\", \"dimple\", \"dinghy\", \"dinner\", \"dinosaur\", \"diploma\", \"dipstick\", \"direction\", \"dirt\", \"disadvantage\", \"discovery\", \"discussion\", \"disease\", \"disgust\", \"dish\", \"distance\", \"distribution\", \"distributor\", \"diving\", \"division\", \"divorced\", \"dock\", \"doctor\", \"dog\", \"dogsled\", \"doll\", \"dollar\", \"dolphin\", \"domain\", \"donald\", \"donkey\", \"donna\", \"door\", \"dorothy\", \"double\", \"doubt\", \"downtown\", \"dragon\", \"dragonfly\", \"drain\", \"drake\", \"drama\", \"draw\", \"drawbridge\", \"drawer\", \"dream\", \"dredger\", \"dress\", \"dresser\", \"dressing\", \"drill\", \"drink\", \"drive\", \"driver\", \"driving\", \"drizzle\", \"drop\", \"drug\", \"drum\", \"dry\", \"dryer\", \"duck\", \"duckling\", \"dugout\", \"dungeon\", \"dust\", \"eagle\", \"ear\", \"earth\", \"earthquake\", \"ease\", \"east\", \"edge\", \"edger\", \"editor\", \"editorial\", \"education\", \"edward\", \"eel\", \"effect\", \"egg\", \"eggnog\", \"eggplant\", \"egypt\", \"eight\", \"elbow\", \"element\", \"elephant\", \"elizabeth\", \"ellipse\", \"emery\", \"employee\", \"employer\", \"encyclopedia\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"engineering\", \"english\", \"enquiry\", \"entrance\", \"environment\", \"epoch\", \"epoxy\", \"equinox\", \"equipment\", \"era\", \"error\", \"estimate\", \"ethernet\", \"ethiopia\", \"euphonium\", \"europe\", \"evening\", \"event\", \"examination\", \"example\", \"exchange\", \"exclamation\", \"exhaust\", \"ex-husband\", \"existence\", \"expansion\", \"experience\", \"expert\", \"explanation\", \"ex-wife\", \"eye\", \"eyebrow\", \"eyelash\", \"eyeliner\", \"face\", \"facilities\", \"fact\", \"factory\", \"fahrenheit\", \"fairies\", \"fall\", \"family\", \"fan\", \"fang\", \"farm\", \"farmer\", \"fat\", \"father\", \"father-in-law\", \"faucet\", \"fear\", \"feast\", \"feather\", \"feature\", \"february\", \"fedelini\", \"feedback\", \"feeling\", \"feet\", \"felony\", \"female\", \"fender\", \"ferry\", \"ferryboat\", \"fertilizer\", \"fiber\", \"fiberglass\", \"fibre\", \"fiction\", \"field\", \"fifth\", \"fight\", \"fighter\", \"file\", \"find\", \"fine\", \"finger\", \"fir\", \"fire\", \"fired\", \"fireman\", \"fireplace\", \"firewall\", \"fish\", \"fisherman\", \"flag\", \"flame\", \"flare\", \"flat\", \"flavor\", \"flax\", \"flesh\", \"flight\", \"flock\", \"flood\", \"floor\", \"flower\", \"flugelhorn\", \"flute\", \"fly\", \"foam\", \"fog\", \"fold\", \"font\", \"food\", \"foot\", \"football\", \"footnote\", \"force\", \"forecast\", \"forehead\", \"forest\", \"forgery\", \"fork\", \"form\", \"format\", \"fortnight\", \"foundation\", \"fountain\", \"fowl\", \"fox\", \"foxglove\", \"fragrance\", \"frame\", \"france\", \"freckle\", \"freeze\", \"freezer\", \"freighter\", \"french\", \"freon\", \"friction\", \"friday\", \"fridge\", \"friend\", \"frog\", \"front\", \"frost\", \"frown\", \"fruit\", \"fuel\", \"fur\", \"furniture\", \"galley\", \"gallon\", \"game\", \"gander\", \"garage\", \"garden\", \"garlic\", \"gas\", \"gasoline\", \"gate\", \"gateway\", \"gauge\", \"gazelle\", \"gear\", \"gearshift\", \"geese\", \"gemini\", \"gender\", \"geography\", \"geology\", \"geometry\", \"george\", \"geranium\", \"german\", \"germany\", \"ghana\", \"ghost\", \"giant\", \"giraffe\", \"girdle\", \"girl\", \"gladiolus\", \"glass\", \"glider\", \"gliding\", \"glockenspiel\", \"glove\", \"glue\", \"goal\", \"goat\", \"gold\", \"goldfish\", \"golf\", \"gondola\", \"gong\", \"good-bye\", \"goose\", \"gore-tex\", \"gorilla\", \"gosling\", \"government\", \"governor\", \"grade\", \"grain\", \"gram\", \"granddaughter\", \"grandfather\", \"grandmother\", \"grandson\", \"grape\", \"graphic\", \"grass\", \"grasshopper\", \"gray\", \"grease\", \"great-grandfather\", \"great-grandmother\", \"greece\", \"greek\", \"green\", \"grenade\", \"grey\", \"grill\", \"grip\", \"ground\", \"group\", \"grouse\", \"growth\", \"guarantee\", \"guatemalan\", \"guide\", \"guilty\", \"guitar\", \"gum\", \"gun\", \"gym\", \"gymnast\", \"hacksaw\", \"hail\", \"hair\", \"haircut\", \"half-brother\", \"half-sister\", \"halibut\", \"hall\", \"hallway\", \"hamburger\", \"hammer\", \"hamster\", \"hand\", \"handball\", \"handicap\", \"handle\", \"handsaw\", \"harbor\", \"hardboard\", \"hardcover\", \"hardhat\", \"hardware\", \"harmonica\", \"harmony\", \"harp\", \"hat\", \"hate\", \"hawk\", \"head\", \"headlight\", \"headline\", \"health\", \"hearing\", \"heart\", \"heat\", \"heaven\", \"hedge\", \"height\", \"helen\", \"helicopter\", \"helium\", \"hell\", \"helmet\", \"help\", \"hemp\", \"hen\", \"heron\", \"herring\", \"hexagon\", \"hill\", \"himalayan\", \"hip\", \"hippopotamus\", \"history\", \"hobbies\", \"hockey\", \"hoe\", \"hole\", \"holiday\", \"home\", \"honey\", \"hood\", \"hook\", \"hope\", \"horn\", \"horse\", \"hose\", \"hospital\", \"hot\", \"hour\", \"hourglass\", \"house\", \"hovercraft\", \"hub\", \"hubcap\", \"humidity\", \"humor\", \"hurricane\", \"hyacinth\", \"hydrant\", \"hydrofoil\", \"hydrogen\", \"hyena\", \"hygienic\", \"ice\", \"icebreaker\", \"icicle\", \"icon\", \"idea\", \"ikebana\", \"illegal\", \"imprisonment\", \"improvement\", \"impulse\", \"inch\", \"income\", \"increase\", \"index\", \"india\", \"indonesia\", \"industry\", \"ink\", \"innocent\", \"input\", \"insect\", \"instruction\", \"instrument\", \"insulation\", \"insurance\", \"interactive\", \"interest\", \"internet\", \"interviewer\", \"intestine\", \"invention\", \"inventory\", \"invoice\", \"iran\", \"iraq\", \"iris\", \"iron\", \"island\", \"israel\", \"italian\", \"italy\", \"jacket\", \"jaguar\", \"jail\", \"jam\", \"james\", \"january\", \"japan\", \"japanese\", \"jar\", \"jasmine\", \"jason\", \"jaw\", \"jeans\", \"jeep\", \"jeff\", \"jelly\", \"jellyfish\", \"jennifer\", \"jet\", \"jewel\", \"jogging\", \"john\", \"join\", \"joke\", \"joseph\", \"journey\", \"judge\", \"judo\", \"juice\", \"july\", \"jumbo\", \"jump\", \"jumper\", \"june\", \"jury\", \"justice\", \"jute\", \"kale\", \"kamikaze\", \"kangaroo\", \"karate\", \"karen\", \"kayak\", \"kendo\", \"kenneth\", \"kenya\", \"ketchup\", \"kettle\", \"kettledrum\", \"kevin\", \"key\", \"keyboard\", \"keyboarding\", \"kick\", \"kidney\", \"kilogram\", \"kilometer\", \"kimberly\", \"kiss\", \"kitchen\", \"kite\", \"kitten\", \"kitty\", \"knee\", \"knickers\", \"knife\", \"knight\", \"knot\", \"knowledge\", \"kohlrabi\", \"korean\", \"laborer\", \"lace\", \"ladybug\", \"lake\", \"lamb\", \"lamp\", \"lan\", \"land\", \"landmine\", \"language\", \"larch\", \"lasagna\", \"latency\", \"latex\", \"lathe\", \"laugh\", \"laundry\", \"laura\", \"law\", \"lawyer\", \"layer\", \"lead\", \"leaf\", \"learning\", \"leather\", \"leek\", \"leg\", \"legal\", \"lemonade\", \"lentil\", \"leo\", \"leopard\", \"letter\", \"lettuce\", \"level\", \"libra\", \"library\", \"license\", \"lier\", \"lift\", \"light\", \"lightning\", \"lilac\", \"lily\", \"limit\", \"linda\", \"line\", \"linen\", \"link\", \"lion\", \"lip\", \"lipstick\", \"liquid\", \"liquor\", \"lisa\", \"list\", \"literature\", \"litter\", \"liver\", \"lizard\", \"llama\", \"loaf\", \"loan\", \"lobster\", \"lock\", \"locket\", \"locust\", \"look\", \"loss\", \"lotion\", \"love\", \"low\", \"lumber\", \"lunch\", \"lunchroom\", \"lung\", \"lunge\", \"lute\", \"luttuce\", \"lycra\", \"lynx\", \"lyocell\", \"lyre\", \"lyric\", \"macaroni\", \"machine\", \"macrame\", \"magazine\", \"magic\", \"magician\", \"maid\", \"mail\", \"mailbox\", \"mailman\", \"makeup\", \"malaysia\", \"male\", \"mall\", \"mallet\", \"man\", \"manager\", \"mandolin\", \"manicure\", \"manx\", \"map\", \"maple\", \"maraca\", \"marble\", \"march\", \"margaret\", \"margin\", \"maria\", \"marimba\", \"mark\", \"mark\", \"market\", \"married\", \"mary\", \"mascara\", \"mask\", \"mass\", \"match\", \"math\", \"mattock\", \"may\", \"mayonnaise\", \"meal\", \"measure\", \"meat\", \"mechanic\", \"medicine\", \"meeting\", \"melody\", \"memory\", \"men\", \"menu\", \"mercury\", \"message\", \"metal\", \"meteorology\", \"meter\", \"methane\", \"mexican\", \"mexico\", \"mice\", \"michael\", \"michelle\", \"microwave\", \"middle\", \"mile\", \"milk\", \"milkshake\", \"millennium\", \"millimeter\", \"millisecond\", \"mimosa\", \"mind\", \"mine\", \"minibus\", \"mini-skirt\", \"minister\", \"mint\", \"minute\", \"mirror\", \"missile\", \"mist\", \"mistake\", \"mitten\", \"moat\", \"modem\", \"mole\", \"mom\", \"monday\", \"money\", \"monkey\", \"month\", \"moon\", \"morning\", \"morocco\", \"mosque\", \"mosquito\", \"mother\", \"mother-in-law\", \"motion\", \"motorboat\", \"motorcycle\", \"mountain\", \"mouse\", \"moustache\", \"mouth\", \"move\", \"multi-hop\", \"multimedia\", \"muscle\", \"museum\", \"music\", \"musician\", \"mustard\", \"myanmar\", \"nail\", \"name\", \"nancy\", \"napkin\", \"narcissus\", \"nation\", \"neck\", \"need\", \"needle\", \"neon\", \"nepal\", \"nephew\", \"nerve\", \"nest\", \"net\", \"network\", \"news\", \"newsprint\", \"newsstand\", \"nic\", \"nickel\", \"niece\", \"nigeria\", \"night\", \"nitrogen\", \"node\", \"noise\", \"noodle\", \"north\", \"north\", \"america\", \"north\", \"korea\", \"norwegian\", \"nose\", \"note\", \"notebook\", \"notify\", \"novel\", \"november\", \"number\", \"numeric\", \"nurse\", \"nut\", \"nylon\", \"oak\", \"oatmeal\", \"objective\", \"oboe\", \"observation\", \"occupation\", \"ocean\", \"ocelot\", \"octagon\", \"octave\", \"october\", \"octopus\", \"odometer\", \"offence\", \"offer\", \"office\", \"oil\", \"okra\", \"olive\", \"onion\", \"open\", \"opera\", \"operation\", \"ophthalmologist\", \"opinion\", \"option\", \"orange\", \"orchestra\", \"orchid\", \"order\", \"organ\", \"organisation\", \"organization\", \"ornament\", \"ostrich\", \"otter\", \"ounce\", \"output\", \"outrigger\", \"oval\", \"oven\", \"overcoat\", \"owl\", \"owner\", \"ox\", \"oxygen\", \"oyster\", \"package\", \"packet\", \"page\", \"pail\", \"pain\", \"paint\", \"pair\", \"pajama\", \"pakistan\", \"palm\", \"pamphlet\", \"pan\", \"pancake\", \"pancreas\", \"panda\", \"pansy\", \"panther\", \"panties\", \"pantry\", \"pants\", \"panty\", \"pantyhose\", \"paper\", \"paperback\", \"parade\", \"parallelogram\", \"parcel\", \"parent\", \"parentheses\", \"park\", \"parrot\", \"parsnip\", \"part\", \"particle\", \"partner\", \"partridge\", \"party\", \"passbook\", \"passenger\", \"passive\", \"pasta\", \"paste\", \"pastor\", \"pastry\", \"patch\", \"path\", \"patient\", \"patio\", \"patricia\", \"paul\", \"payment\", \"pea\", \"peace\", \"peak\", \"peanut\", \"pear\", \"pedestrian\", \"pediatrician\", \"peen\", \"peer-to-peer\", \"pelican\", \"pen\", \"penalty\", \"pencil\", \"pendulum\", \"pentagon\", \"peony\", \"pepper\", \"perch\", \"perfume\", \"period\", \"periodical\", \"peripheral\", \"permission\", \"persian\", \"person\", \"peru\", \"pest\", \"pet\", \"pharmacist\", \"pheasant\", \"philippines\", \"philosophy\", \"phone\", \"physician\", \"piano\", \"piccolo\", \"pickle\", \"picture\", \"pie\", \"pig\", \"pigeon\", \"pike\", \"pillow\", \"pilot\", \"pimple\", \"pin\", \"pine\", \"ping\", \"pink\", \"pint\", \"pipe\", \"pisces\", \"pizza\", \"place\", \"plain\", \"plane\", \"planet\", \"plant\", \"plantation\", \"plaster\", \"plasterboard\", \"plastic\", \"plate\", \"platinum\", \"play\", \"playground\", \"playroom\", \"pleasure\", \"plier\", \"plot\", \"plough\", \"plow\", \"plywood\", \"pocket\", \"poet\", \"point\", \"poison\", \"poland\", \"police\", \"policeman\", \"polish\", \"politician\", \"pollution\", \"polo\", \"polyester\", \"pond\", \"popcorn\", \"poppy\", \"population\", \"porch\", \"porcupine\", \"port\", \"porter\", \"position\", \"possibility\", \"postage\", \"postbox\", \"pot\", \"potato\", \"poultry\", \"pound\", \"powder\", \"power\", \"precipitation\", \"preface\", \"prepared\", \"pressure\", \"price\", \"priest\", \"print\", \"printer\", \"prison\", \"probation\", \"process\", \"processing\", \"produce\", \"product\", \"production\", \"professor\", \"profit\", \"promotion\", \"propane\", \"property\", \"prose\", \"prosecution\", \"protest\", \"protocol\", \"pruner\", \"psychiatrist\", \"psychology\", \"ptarmigan\", \"puffin\", \"pull\", \"puma\", \"pump\", \"pumpkin\", \"punch\", \"punishment\", \"puppy\", \"purchase\", \"purple\", \"purpose\", \"push\", \"pvc\", \"pyjama\", \"pyramid\", \"quail\", \"quality\", \"quart\", \"quarter\", \"quartz\", \"queen\", \"question\", \"quicksand\", \"quiet\", \"quill\", \"quilt\", \"quince\", \"quit\", \"quiver\", \"quotation\", \"rabbi\", \"rabbit\", \"racing\", \"radar\", \"radiator\", \"radio\", \"radish\", \"raft\", \"rail\", \"railway\", \"rain\", \"rainbow\", \"raincoat\", \"rainstorm\", \"rake\", \"ramie\", \"random\", \"range\", \"rat\", \"rate\", \"raven\", \"ravioli\", \"ray\", \"rayon\", \"reaction\", \"reading\", \"reason\", \"receipt\", \"recess\", \"record\", \"recorder\", \"rectangle\", \"red\", \"reduction\", \"refrigerator\", \"refund\", \"regret\", \"reindeer\", \"relation\", \"relative\", \"religion\", \"relish\", \"reminder\", \"repair\", \"replace\", \"report\", \"representative\", \"request\", \"resolution\", \"respect\", \"responsibility\", \"rest\", \"restaurant\", \"result\", \"retailer\", \"revolve\", \"revolver\", \"reward\", \"rhinoceros\", \"rhythm\", \"rice\", \"richard\", \"riddle\", \"rifle\", \"ring\", \"rise\", \"risk\", \"river\", \"riverbed\", \"road\", \"roadway\", \"roast\", \"robert\", \"robin\", \"rock\", \"rocket\", \"rod\", \"roll\", \"romania\", \"romanian\", \"ronald\", \"roof\", \"room\", \"rooster\", \"root\", \"rose\", \"rotate\", \"route\", \"router\", \"rowboat\", \"rub\", \"rubber\", \"rugby\", \"rule\", \"run\", \"russia\", \"russian\", \"rutabaga\", \"ruth\", \"sack\", \"sagittarius\", \"sail\", \"sailboat\", \"sailor\", \"salad\", \"salary\", \"sale\", \"salesman\", \"salmon\", \"salt\", \"sampan\", \"samurai\", \"sand\", \"sandra\", \"sandwich\", \"santa\", \"sarah\", \"sardine\", \"satin\", \"saturday\", \"sauce\", \"saudi\", \"arabia\", \"sausage\", \"save\", \"saw\", \"saxophone\", \"scale\", \"scallion\", \"scanner\", \"scarecrow\", \"scarf\", \"scene\", \"scent\", \"schedule\", \"school\", \"science\", \"scissors\", \"scooter\", \"scorpio\", \"scorpion\", \"scraper\", \"screen\", \"screw\", \"screwdriver\", \"sea\", \"seagull\", \"seal\", \"seaplane\", \"search\", \"seashore\", \"season\", \"seat\", \"second\", \"secretary\", \"secure\", \"security\", \"seed\", \"seeder\", \"segment\", \"select\", \"selection\", \"self\", \"semicircle\", \"semicolon\", \"sense\", \"sentence\", \"separated\", \"september\", \"servant\", \"server\", \"session\", \"sex\", \"shade\", \"shadow\", \"shake\", \"shallot\", \"shame\", \"shampoo\", \"shape\", \"share\", \"shark\", \"sharon\", \"shears\", \"sheep\", \"sheet\", \"shelf\", \"shell\", \"shield\", \"shingle\", \"ship\", \"shirt\", \"shock\", \"shoe\", \"shoemaker\", \"shop\", \"shorts\", \"shoulder\", \"shovel\", \"show\", \"shrimp\", \"shrine\", \"siamese\", \"siberian\", \"side\", \"sideboard\", \"sidecar\", \"sidewalk\", \"sign\", \"signature\", \"silica\", \"silk\", \"silver\", \"sing\", \"singer\", \"single\", \"sink\", \"sister\", \"sister-in-law\", \"size\", \"skate\", \"skiing\", \"skill\", \"skin\", \"skirt\", \"sky\", \"slash\", \"slave\", \"sled\", \"sleep\", \"sleet\", \"slice\", \"slime\", \"slip\", \"slipper\", \"slope\", \"smash\", \"smell\", \"smile\", \"smoke\", \"snail\", \"snake\", \"sneeze\", \"snow\", \"snowboarding\", \"snowflake\", \"snowman\", \"snowplow\", \"snowstorm\", \"soap\", \"soccer\", \"society\", \"sociology\", \"sock\", \"soda\", \"sofa\", \"softball\", \"softdrink\", \"software\", \"soil\", \"soldier\", \"son\", \"song\", \"soprano\", \"sort\", \"sound\", \"soup\", \"sousaphone\", \"south\", \"africa\", \"south\", \"america\", \"south\", \"korea\", \"soy\", \"soybean\", \"space\", \"spade\", \"spaghetti\", \"spain\", \"spandex\", \"spark\", \"sparrow\", \"spear\", \"specialist\", \"speedboat\", \"sphere\", \"sphynx\", \"spider\", \"spike\", \"spinach\", \"spleen\", \"sponge\", \"spoon\", \"spot\", \"spring\", \"sprout\", \"spruce\", \"spy\", \"square\", \"squash\", \"squid\", \"squirrel\", \"stage\", \"staircase\", \"stamp\", \"star\", \"start\", \"starter\", \"state\", \"statement\", \"station\", \"statistic\", \"steam\", \"steel\", \"stem\", \"step\", \"step-aunt\", \"step-brother\", \"stepdaughter\", \"step-daughter\", \"step-father\", \"step-grandfather\", \"step-grandmother\", \"stepmother\", \"step-mother\", \"step-sister\", \"stepson\", \"step-son\", \"step-uncle\", \"steven\", \"stew\", \"stick\", \"stinger\", \"stitch\", \"stock\", \"stocking\", \"stomach\", \"stone\", \"stool\", \"stop\", \"stopsign\", \"stopwatch\", \"store\", \"storm\", \"story\", \"stove\", \"stranger\", \"straw\", \"stream\", \"street\", \"streetcar\", \"stretch\", \"string\", \"structure\", \"study\", \"sturgeon\", \"submarine\", \"substance\", \"subway\", \"success\", \"sudan\", \"suede\", \"sugar\", \"suggestion\", \"suit\", \"summer\", \"sun\", \"sunday\", \"sundial\", \"sunflower\", \"sunshine\", \"supermarket\", \"supply\", \"support\", \"surfboard\", \"surgeon\", \"surname\", \"surprise\", \"susan\", \"sushi\", \"swallow\", \"swamp\", \"swan\", \"sweater\", \"sweatshirt\", \"sweatshop\", \"swedish\", \"sweets\", \"swim\", \"swimming\", \"swing\", \"swiss\", \"switch\", \"sword\", \"swordfish\", \"sycamore\", \"syria\", \"syrup\", \"system\", \"table\", \"tablecloth\", \"tabletop\", \"tachometer\", \"tadpole\", \"tail\", \"tailor\", \"taiwan\", \"talk\", \"tank\", \"tanker\", \"tanzania\", \"target\", \"taste\", \"taurus\", \"tax\", \"taxi\", \"taxicab\", \"tea\", \"teacher\", \"teaching\", \"team\", \"technician\", \"teeth\", \"television\", \"teller\", \"temper\", \"temperature\", \"temple\", \"tempo\", \"tendency\", \"tennis\", \"tenor\", \"tent\", \"territory\", \"test\", \"text\", \"textbook\", \"texture\", \"thailand\", \"theater\", \"theory\", \"thermometer\", \"thing\", \"thistle\", \"thomas\", \"thought\", \"thread\", \"thrill\", \"throat\", \"throne\", \"thumb\", \"thunder\", \"thunderstorm\", \"thursday\", \"ticket\", \"tie\", \"tiger\", \"tights\", \"tile\", \"timbale\", \"time\", \"timer\", \"timpani\", \"tin\", \"tip\", \"tire\", \"titanium\", \"title\", \"toad\", \"toast\", \"toe\", \"toenail\", \"toilet\", \"tomato\", \"tom-tom\", \"ton\", \"tongue\", \"tooth\", \"toothbrush\", \"toothpaste\", \"top\", \"tornado\", \"tortellini\", \"tortoise\", \"touch\", \"tower\", \"town\", \"toy\", \"tractor\", \"trade\", \"traffic\", \"trail\", \"train\", \"tramp\", \"transaction\", \"transmission\", \"transport\", \"trapezoid\", \"tray\", \"treatment\", \"tree\", \"trial\", \"triangle\", \"trick\", \"trigonometry\", \"trip\", \"trombone\", \"trouble\", \"trousers\", \"trout\", \"trowel\", \"truck\", \"trumpet\", \"trunk\", \"t-shirt\", \"tsunami\", \"tub\", \"tuba\", \"tuesday\", \"tugboat\", \"tulip\", \"tuna\", \"tune\", \"turkey\", \"turkey\", \"turkish\", \"turn\", \"turnip\", \"turnover\", \"turret\", \"turtle\", \"tv\", \"twig\", \"twilight\", \"twine\", \"twist\", \"typhoon\", \"tyvek\", \"uganda\", \"ukraine\", \"ukrainian\", \"umbrella\", \"uncle\", \"underclothes\", \"underpants\", \"undershirt\", \"underwear\", \"unit\", \"united\", \"kingdom\", \"unshielded\", \"use\", \"utensil\", \"uzbekistan\", \"vacation\", \"vacuum\", \"valley\", \"value\", \"van\", \"vase\", \"vault\", \"vegetable\", \"vegetarian\", \"veil\", \"vein\", \"velvet\", \"venezuela\", \"venezuelan\", \"verdict\", \"vermicelli\", \"verse\", \"vessel\", \"vest\", \"veterinarian\", \"vibraphone\", \"vietnam\", \"view\", \"vinyl\", \"viola\", \"violet\", \"violin\", \"virgo\", \"viscose\", \"vise\", \"vision\", \"visitor\", \"voice\", \"volcano\", \"volleyball\", \"voyage\", \"vulture\", \"waiter\", \"waitress\", \"walk\", \"wall\", \"wallaby\", \"wallet\", \"walrus\", \"war\", \"warm\", \"wash\", \"washer\", \"wasp\", \"waste\", \"watch\", \"watchmaker\", \"water\", \"waterfall\", \"wave\", \"wax\", \"way\", \"wealth\", \"weapon\", \"weasel\", \"weather\", \"wedge\", \"wednesday\", \"weed\", \"weeder\", \"week\", \"weight\", \"whale\", \"wheel\", \"whip\", \"whiskey\", \"whistle\", \"white\", \"wholesaler\", \"whorl\", \"wilderness\", \"william\", \"willow\", \"wind\", \"windchime\", \"window\", \"windscreen\", \"windshield\", \"wine\", \"wing\", \"winter\", \"wire\", \"wish\", \"witch\", \"withdrawal\", \"witness\", \"wolf\", \"woman\", \"women\", \"wood\", \"wool\", \"woolen\", \"word\", \"work\", \"workshop\", \"worm\", \"wound\", \"wrecker\", \"wren\", \"wrench\", \"wrinkle\", \"wrist\", \"writer\", \"xylophone\", \"yacht\", \"yak\", \"yam\", \"yard\", \"yarn\", \"year\", \"yellow\", \"yew\", \"yogurt\", \"yoke\", \"yugoslavian\", \"zebra\", \"zephyr\", \"zinc\", \"zipper\", \"zone\", \"zoo\", \"zoology\"];\n\nexports.adjectives = [\"aback\", \"abaft\", \"abandoned\", \"abashed\", \"aberrant\", \"abhorrent\", \"abiding\", \"abject\", \"ablaze\", \"able\", \"abnormal\", \"aboard\", \"aboriginal\", \"abortive\", \"abounding\", \"abrasive\", \"abrupt\", \"absent\", \"absorbed\", \"absorbing\", \"abstracted\", \"absurd\", \"abundant\", \"abusive\", \"acceptable\", \"accessible\", \"accidental\", \"accurate\", \"acid\", \"acidic\", \"acoustic\", \"acrid\", \"actually\", \"adHoc\", \"adamant\", \"adaptable\", \"addicted\", \"adhesive\", \"adjoining\", \"adorable\", \"adventurous\", \"afraid\", \"aggressive\", \"agonizing\", \"agreeable\", \"ahead\", \"ajar\", \"alcoholic\", \"alert\", \"alike\", \"alive\", \"alleged\", \"alluring\", \"aloof\", \"amazing\", \"ambiguous\", \"ambitious\", \"amuck\", \"amused\", \"amusing\", \"ancient\", \"angry\", \"animated\", \"annoyed\", \"annoying\", \"anxious\", \"apathetic\", \"aquatic\", \"aromatic\", \"arrogant\", \"ashamed\", \"aspiring\", \"assorted\", \"astonishing\", \"attractive\", \"auspicious\", \"automatic\", \"available\", \"average\", \"awake\", \"aware\", \"awesome\", \"awful\", \"axiomatic\", \"bad\", \"barbarous\", \"bashful\", \"bawdy\", \"beautiful\", \"befitting\", \"belligerent\", \"beneficial\", \"bent\", \"berserk\", \"best\", \"better\", \"bewildered\", \"big\", \"billowy\", \"bite-Sized\", \"bitter\", \"bizarre\", \"black\", \"black-And-White\", \"bloody\", \"blue\", \"blue-Eyed\", \"blushing\", \"boiling\", \"boorish\", \"bored\", \"boring\", \"bouncy\", \"boundless\", \"brainy\", \"brash\", \"brave\", \"brawny\", \"breakable\", \"breezy\", \"brief\", \"bright\", \"bright\", \"broad\", \"broken\", \"brown\", \"bumpy\", \"burly\", \"bustling\", \"busy\", \"cagey\", \"calculating\", \"callous\", \"calm\", \"capable\", \"capricious\", \"careful\", \"careless\", \"caring\", \"cautious\", \"ceaseless\", \"certain\", \"changeable\", \"charming\", \"cheap\", \"cheerful\", \"chemical\", \"chief\", \"childlike\", \"chilly\", \"chivalrous\", \"chubby\", \"chunky\", \"clammy\", \"classy\", \"clean\", \"clear\", \"clever\", \"cloistered\", \"cloudy\", \"closed\", \"clumsy\", \"cluttered\", \"coherent\", \"cold\", \"colorful\", \"colossal\", \"combative\", \"comfortable\", \"common\", \"complete\", \"complex\", \"concerned\", \"condemned\", \"confused\", \"conscious\", \"cooing\", \"cool\", \"cooperative\", \"coordinated\", \"courageous\", \"cowardly\", \"crabby\", \"craven\", \"crazy\", \"creepy\", \"crooked\", \"crowded\", \"cruel\", \"cuddly\", \"cultured\", \"cumbersome\", \"curious\", \"curly\", \"curved\", \"curvy\", \"cut\", \"cute\", \"cute\", \"cynical\", \"daffy\", \"daily\", \"damaged\", \"damaging\", \"damp\", \"dangerous\", \"dapper\", \"dark\", \"dashing\", \"dazzling\", \"dead\", \"deadpan\", \"deafening\", \"dear\", \"debonair\", \"decisive\", \"decorous\", \"deep\", \"deeply\", \"defeated\", \"defective\", \"defiant\", \"delicate\", \"delicious\", \"delightful\", \"demonic\", \"delirious\", \"dependent\", \"depressed\", \"deranged\", \"descriptive\", \"deserted\", \"detailed\", \"determined\", \"devilish\", \"didactic\", \"different\", \"difficult\", \"diligent\", \"direful\", \"dirty\", \"disagreeable\", \"disastrous\", \"discreet\", \"disgusted\", \"disgusting\", \"disillusioned\", \"dispensable\", \"distinct\", \"disturbed\", \"divergent\", \"dizzy\", \"domineering\", \"doubtful\", \"drab\", \"draconian\", \"dramatic\", \"dreary\", \"drunk\", \"dry\", \"dull\", \"dusty\", \"dusty\", \"dynamic\", \"dysfunctional\", \"eager\", \"early\", \"earsplitting\", \"earthy\", \"easy\", \"eatable\", \"economic\", \"educated\", \"efficacious\", \"efficient\", \"eight\", \"elastic\", \"elated\", \"elderly\", \"electric\", \"elegant\", \"elfin\", \"elite\", \"embarrassed\", \"eminent\", \"empty\", \"enchanted\", \"enchanting\", \"encouraging\", \"endurable\", \"energetic\", \"enormous\", \"entertaining\", \"enthusiastic\", \"envious\", \"equable\", \"equal\", \"erect\", \"erratic\", \"ethereal\", \"evanescent\", \"evasive\", \"even\", \"excellent\", \"excited\", \"exciting\", \"exclusive\", \"exotic\", \"expensive\", \"extra-Large\", \"extra-Small\", \"exuberant\", \"exultant\", \"fabulous\", \"faded\", \"faint\", \"fair\", \"faithful\", \"fallacious\", \"false\", \"familiar\", \"famous\", \"fanatical\", \"fancy\", \"fantastic\", \"far\", \"far-Flung\", \"fascinated\", \"fast\", \"fat\", \"faulty\", \"fearful\", \"fearless\", \"feeble\", \"feigned\", \"female\", \"fertile\", \"festive\", \"few\", \"fierce\", \"filthy\", \"fine\", \"finicky\", \"first\", \"five\", \"fixed\", \"flagrant\", \"flaky\", \"flashy\", \"flat\", \"flawless\", \"flimsy\", \"flippant\", \"flowery\", \"fluffy\", \"fluttering\", \"foamy\", \"foolish\", \"foregoing\", \"forgetful\", \"fortunate\", \"four\", \"frail\", \"fragile\", \"frantic\", \"free\", \"freezing\", \"frequent\", \"fresh\", \"fretful\", \"friendly\", \"frightened\", \"frightening\", \"full\", \"fumbling\", \"functional\", \"funny\", \"furry\", \"furtive\", \"future\", \"futuristic\", \"fuzzy\", \"gabby\", \"gainful\", \"gamy\", \"gaping\", \"garrulous\", \"gaudy\", \"general\", \"gentle\", \"giant\", \"giddy\", \"gifted\", \"gigantic\", \"glamorous\", \"gleaming\", \"glib\", \"glistening\", \"glorious\", \"glossy\", \"godly\", \"good\", \"goofy\", \"gorgeous\", \"graceful\", \"grandiose\", \"grateful\", \"gratis\", \"gray\", \"greasy\", \"great\", \"greedy\", \"green\", \"grey\", \"grieving\", \"groovy\", \"grotesque\", \"grouchy\", \"grubby\", \"gruesome\", \"grumpy\", \"guarded\", \"guiltless\", \"gullible\", \"gusty\", \"guttural\", \"habitual\", \"half\", \"hallowed\", \"halting\", \"handsome\", \"handsomely\", \"handy\", \"hanging\", \"hapless\", \"happy\", \"hard\", \"hard-To-Find\", \"harmonious\", \"harsh\", \"hateful\", \"heady\", \"healthy\", \"heartbreaking\", \"heavenly\", \"heavy\", \"hellish\", \"helpful\", \"helpless\", \"hesitant\", \"hideous\", \"high\", \"highfalutin\", \"high-Pitched\", \"hilarious\", \"hissing\", \"historical\", \"holistic\", \"hollow\", \"homeless\", \"homely\", \"honorable\", \"horrible\", \"hospitable\", \"hot\", \"huge\", \"hulking\", \"humdrum\", \"humorous\", \"hungry\", \"hurried\", \"hurt\", \"hushed\", \"husky\", \"hypnotic\", \"hysterical\", \"icky\", \"icy\", \"idiotic\", \"ignorant\", \"ill\", \"illegal\", \"ill-Fated\", \"ill-Informed\", \"illustrious\", \"imaginary\", \"immense\", \"imminent\", \"impartial\", \"imperfect\", \"impolite\", \"important\", \"imported\", \"impossible\", \"incandescent\", \"incompetent\", \"inconclusive\", \"industrious\", \"incredible\", \"inexpensive\", \"infamous\", \"innate\", \"innocent\", \"inquisitive\", \"insidious\", \"instinctive\", \"intelligent\", \"interesting\", \"internal\", \"invincible\", \"irate\", \"irritating\", \"itchy\", \"jaded\", \"jagged\", \"jazzy\", \"jealous\", \"jittery\", \"jobless\", \"jolly\", \"joyous\", \"judicious\", \"juicy\", \"jumbled\", \"jumpy\", \"juvenile\", \"kaput\", \"keen\", \"kind\", \"kindhearted\", \"kindly\", \"knotty\", \"knowing\", \"knowledgeable\", \"known\", \"labored\", \"lackadaisical\", \"lacking\", \"lame\", \"lamentable\", \"languid\", \"large\", \"last\", \"late\", \"laughable\", \"lavish\", \"lazy\", \"lean\", \"learned\", \"left\", \"legal\", \"lethal\", \"level\", \"lewd\", \"light\", \"like\", \"likeable\", \"limping\", \"literate\", \"little\", \"lively\", \"lively\", \"living\", \"lonely\", \"long\", \"longing\", \"long-Term\", \"loose\", \"lopsided\", \"loud\", \"loutish\", \"lovely\", \"loving\", \"low\", \"lowly\", \"lucky\", \"ludicrous\", \"lumpy\", \"lush\", \"luxuriant\", \"lying\", \"lyrical\", \"macabre\", \"macho\", \"maddening\", \"madly\", \"magenta\", \"magical\", \"magnificent\", \"majestic\", \"makeshift\", \"male\", \"malicious\", \"mammoth\", \"maniacal\", \"many\", \"marked\", \"massive\", \"married\", \"marvelous\", \"material\", \"materialistic\", \"mature\", \"mean\", \"measly\", \"meaty\", \"medical\", \"meek\", \"mellow\", \"melodic\", \"melted\", \"merciful\", \"mere\", \"messy\", \"mighty\", \"military\", \"milky\", \"mindless\", \"miniature\", \"minor\", \"miscreant\", \"misty\", \"mixed\", \"moaning\", \"modern\", \"moldy\", \"momentous\", \"motionless\", \"mountainous\", \"muddled\", \"mundane\", \"murky\", \"mushy\", \"mute\", \"mysterious\", \"naive\", \"nappy\", \"narrow\", \"nasty\", \"natural\", \"naughty\", \"nauseating\", \"near\", \"neat\", \"nebulous\", \"necessary\", \"needless\", \"needy\", \"neighborly\", \"nervous\", \"new\", \"next\", \"nice\", \"nifty\", \"nimble\", \"nine\", \"nippy\", \"noiseless\", \"noisy\", \"nonchalant\", \"nondescript\", \"nonstop\", \"normal\", \"nostalgic\", \"nosy\", \"noxious\", \"null\", \"numberless\", \"numerous\", \"nutritious\", \"nutty\", \"oafish\", \"obedient\", \"obeisant\", \"obese\", \"obnoxious\", \"obscene\", \"obsequious\", \"observant\", \"obsolete\", \"obtainable\", \"oceanic\", \"odd\", \"offbeat\", \"old\", \"old-Fashioned\", \"omniscient\", \"one\", \"onerous\", \"open\", \"opposite\", \"optimal\", \"orange\", \"ordinary\", \"organic\", \"ossified\", \"outgoing\", \"outrageous\", \"outstanding\", \"oval\", \"overconfident\", \"overjoyed\", \"overrated\", \"overt\", \"overwrought\", \"painful\", \"painstaking\", \"pale\", \"paltry\", \"panicky\", \"panoramic\", \"parallel\", \"parched\", \"parsimonious\", \"past\", \"pastoral\", \"pathetic\", \"peaceful\", \"penitent\", \"perfect\", \"periodic\", \"permissible\", \"perpetual\", \"petite\", \"petite\", \"phobic\", \"physical\", \"picayune\", \"pink\", \"piquant\", \"placid\", \"plain\", \"plant\", \"plastic\", \"plausible\", \"pleasant\", \"plucky\", \"pointless\", \"poised\", \"polite\", \"political\", \"poor\", \"possessive\", \"possible\", \"powerful\", \"precious\", \"premium\", \"present\", \"pretty\", \"previous\", \"pricey\", \"prickly\", \"private\", \"probable\", \"productive\", \"profuse\", \"protective\", \"proud\", \"psychedelic\", \"psychotic\", \"public\", \"puffy\", \"pumped\", \"puny\", \"purple\", \"purring\", \"pushy\", \"puzzled\", \"puzzling\", \"quack\", \"quaint\", \"quarrelsome\", \"questionable\", \"quick\", \"quickest\", \"quiet\", \"quirky\", \"quixotic\", \"quizzical\", \"rabid\", \"racial\", \"ragged\", \"rainy\", \"rambunctious\", \"rampant\", \"rapid\", \"rare\", \"raspy\", \"ratty\", \"ready\", \"real\", \"rebel\", \"receptive\", \"recondite\", \"red\", \"redundant\", \"reflective\", \"regular\", \"relieved\", \"remarkable\", \"reminiscent\", \"repulsive\", \"resolute\", \"resonant\", \"responsible\", \"rhetorical\", \"rich\", \"right\", \"righteous\", \"rightful\", \"rigid\", \"ripe\", \"ritzy\", \"roasted\", \"robust\", \"romantic\", \"roomy\", \"rotten\", \"rough\", \"round\", \"royal\", \"ruddy\", \"rude\", \"rural\", \"rustic\", \"ruthless\", \"sable\", \"sad\", \"safe\", \"salty\", \"same\", \"sassy\", \"satisfying\", \"savory\", \"scandalous\", \"scarce\", \"scared\", \"scary\", \"scattered\", \"scientific\", \"scintillating\", \"scrawny\", \"screeching\", \"second\", \"second-Hand\", \"secret\", \"secretive\", \"sedate\", \"seemly\", \"selective\", \"selfish\", \"separate\", \"serious\", \"shaggy\", \"shaky\", \"shallow\", \"sharp\", \"shiny\", \"shivering\", \"shocking\", \"short\", \"shrill\", \"shut\", \"shy\", \"sick\", \"silent\", \"silent\", \"silky\", \"silly\", \"simple\", \"simplistic\", \"sincere\", \"six\", \"skillful\", \"skinny\", \"sleepy\", \"slim\", \"slimy\", \"slippery\", \"sloppy\", \"slow\", \"small\", \"smart\", \"smelly\", \"smiling\", \"smoggy\", \"smooth\", \"sneaky\", \"snobbish\", \"snotty\", \"soft\", \"soggy\", \"solid\", \"somber\", \"sophisticated\", \"sordid\", \"sore\", \"sore\", \"sour\", \"sparkling\", \"special\", \"spectacular\", \"spicy\", \"spiffy\", \"spiky\", \"spiritual\", \"spiteful\", \"splendid\", \"spooky\", \"spotless\", \"spotted\", \"spotty\", \"spurious\", \"squalid\", \"square\", \"squealing\", \"squeamish\", \"staking\", \"stale\", \"standing\", \"statuesque\", \"steadfast\", \"steady\", \"steep\", \"stereotyped\", \"sticky\", \"stiff\", \"stimulating\", \"stingy\", \"stormy\", \"straight\", \"strange\", \"striped\", \"strong\", \"stupendous\", \"stupid\", \"sturdy\", \"subdued\", \"subsequent\", \"substantial\", \"successful\", \"succinct\", \"sudden\", \"sulky\", \"super\", \"superb\", \"superficial\", \"supreme\", \"swanky\", \"sweet\", \"sweltering\", \"swift\", \"symptomatic\", \"synonymous\", \"taboo\", \"tacit\", \"tacky\", \"talented\", \"tall\", \"tame\", \"tan\", \"tangible\", \"tangy\", \"tart\", \"tasteful\", \"tasteless\", \"tasty\", \"tawdry\", \"tearful\", \"tedious\", \"teeny\", \"teeny-Tiny\", \"telling\", \"temporary\", \"ten\", \"tender\", \"tense\", \"tense\", \"tenuous\", \"terrible\", \"terrific\", \"tested\", \"testy\", \"thankful\", \"therapeutic\", \"thick\", \"thin\", \"thinkable\", \"third\", \"thirsty\", \"thirsty\", \"thoughtful\", \"thoughtless\", \"threatening\", \"three\", \"thundering\", \"tidy\", \"tight\", \"tightfisted\", \"tiny\", \"tired\", \"tiresome\", \"toothsome\", \"torpid\", \"tough\", \"towering\", \"tranquil\", \"trashy\", \"tremendous\", \"tricky\", \"trite\", \"troubled\", \"truculent\", \"true\", \"truthful\", \"two\", \"typical\", \"ubiquitous\", \"ugliest\", \"ugly\", \"ultra\", \"unable\", \"unaccountable\", \"unadvised\", \"unarmed\", \"unbecoming\", \"unbiased\", \"uncovered\", \"understood\", \"undesirable\", \"unequal\", \"unequaled\", \"uneven\", \"unhealthy\", \"uninterested\", \"unique\", \"unkempt\", \"unknown\", \"unnatural\", \"unruly\", \"unsightly\", \"unsuitable\", \"untidy\", \"unused\", \"unusual\", \"unwieldy\", \"unwritten\", \"upbeat\", \"uppity\", \"upset\", \"uptight\", \"used\", \"useful\", \"useless\", \"utopian\", \"utter\", \"uttermost\", \"vacuous\", \"vagabond\", \"vague\", \"valuable\", \"various\", \"vast\", \"vengeful\", \"venomous\", \"verdant\", \"versed\", \"victorious\", \"vigorous\", \"violent\", \"violet\", \"vivacious\", \"voiceless\", \"volatile\", \"voracious\", \"vulgar\", \"wacky\", \"waggish\", \"waiting\", \"wakeful\", \"wandering\", \"wanting\", \"warlike\", \"warm\", \"wary\", \"wasteful\", \"watery\", \"weak\", \"wealthy\", \"weary\", \"well-Groomed\", \"well-Made\", \"well-Off\", \"well-To-Do\", \"wet\", \"whimsical\", \"whispering\", \"white\", \"whole\", \"wholesale\", \"wicked\", \"wide\", \"wide-Eyed\", \"wiggly\", \"wild\", \"willing\", \"windy\", \"wiry\", \"wise\", \"wistful\", \"witty\", \"woebegone\", \"womanly\", \"wonderful\", \"wooden\", \"woozy\", \"workable\", \"worried\", \"worthless\", \"wrathful\", \"wretched\", \"wrong\", \"wry\", \"yellow\", \"yielding\", \"young\", \"youthful\", \"yummy\", \"zany\", \"zealous\", \"zesty\", \"zippy\", \"zonked\"];\n\n//# sourceMappingURL=data:application/json;base64,\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset:utf-8;base64,"}